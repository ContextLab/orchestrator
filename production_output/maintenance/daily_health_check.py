#!/usr/bin/env python3
"""
Daily health check script for Pipeline Validation System.
Automatically generated by production deployment system.
"""

import sys
import json
import psutil
from datetime import datetime
from pathlib import Path

def check_system_health():
    """Perform daily health checks."""
    health_report = {
        "timestamp": datetime.now().isoformat(),
        "system_resources": {
            "cpu_usage": psutil.cpu_percent(interval=1),
            "memory_usage": psutil.virtual_memory().percent,
            "disk_usage": psutil.disk_usage('/').percent
        },
        "health_status": "healthy"
    }
    
    # Check thresholds
    if health_report["system_resources"]["cpu_usage"] > 85:
        health_report["health_status"] = "warning"
        print("⚠️  High CPU usage detected")
    
    if health_report["system_resources"]["memory_usage"] > 90:
        health_report["health_status"] = "warning"  
        print("⚠️  High memory usage detected")
    
    if health_report["system_resources"]["disk_usage"] > 95:
        health_report["health_status"] = "critical"
        print("❌ Critical disk usage detected")
    
    if health_report["health_status"] == "healthy":
        print("✅ System health check passed")
    
    # Save health report
    reports_dir = Path("production_output/reports")
    reports_dir.mkdir(parents=True, exist_ok=True)
    
    report_path = reports_dir / f"health_check_{datetime.now().strftime('%Y%m%d')}.json"
    with open(report_path, 'w') as f:
        json.dump(health_report, f, indent=2)
    
    return health_report["health_status"] == "healthy"

if __name__ == "__main__":
    success = check_system_health()
    sys.exit(0 if success else 1)
