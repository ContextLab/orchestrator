id: test-validation-pipeline
name: Test Validation Pipeline
description: Test pipeline for validating data with AUTO tags
version: "1.0.0"

# Model specification for validation
models:
  default: openai/gpt-4
  validation: anthropic/claude-sonnet-4-20250514

steps:
  - id: generate_data
    tool: data-processing
    action: transform
    parameters:
      data:
        users:
          - name: Alice
            email: alice@example.com
            age: "25"  # String that should be integer
            active: "true"  # String that should be boolean
          - name: Bob
            email: invalid-email  # Invalid format
            age: 30
            active: false
      operation:
        transformations:
          - type: add_field
            field: model_id
            value: "openai/gpt-4"

  - id: validate_strict
    tool: validation
    action: validate
    parameters:
      data: "{{ generate_data.result }}"
      schema:
        type: object
        properties:
          users:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                age:
                  type: integer
                active:
                  type: boolean
                model_id:
                  type: string
                  format: model-id
              required: ["name", "email"]
      mode: strict
    dependencies:
      - generate_data

  - id: validate_lenient
    tool: validation
    action: validate
    parameters:
      data: "{{ generate_data.result }}"
      schema:
        type: object
        properties:
          users:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                age:
                  type: integer
                active:
                  type: boolean
                model_id:
                  type: string
                  format: model-id
              required: ["name", "email"]
      mode: lenient
    dependencies:
      - generate_data

  - id: infer_schema
    tool: validation
    action: infer_schema
    parameters:
      data: "{{ generate_data.result }}"
    dependencies:
      - generate_data

  - id: validate_with_auto
    tool: validation
    action: validate
    parameters:
      data: "{{ generate_data.result }}"
      schema: <AUTO>Infer an appropriate schema for user data with name, email, age, and active status</AUTO>
      mode: <AUTO>Choose the most appropriate validation mode based on the data quality</AUTO>
    dependencies:
      - generate_data

  - id: save_validation_report
    tool: filesystem
    action: write
    parameters:
      path: "validation_reports/test_validation_{{ execution.timestamp | slugify }}.md"
      content: |
        # Validation Test Report
        
        **Date:** {{ execution.timestamp }}
        
        ## Input Data
        
        ```json
        {{ generate_data.result | to_json(indent=2) }}
        ```
        
        ## Validation Results
        
        ### Strict Mode
        - **Valid:** {{ validate_strict.is_valid | default(false) }}
        - **Errors:** {{ validate_strict.errors | length | default(0) }}
        {% if validate_strict.errors %}
        - **Error Details:**
        {% for error in validate_strict.errors %}
          - {{ error }}
        {% endfor %}
        {% endif %}
        
        ### Lenient Mode
        - **Valid:** {{ validate_lenient.is_valid | default(false) }}
        - **Errors:** {{ validate_lenient.errors | length | default(0) }}
        {% if validate_lenient.errors %}
        - **Error Details:**
        {% for error in validate_lenient.errors %}
          - {{ error }}
        {% endfor %}
        {% endif %}
        
        ### Inferred Schema
        ```json
        {{ infer_schema.schema | to_json(indent=2) }}
        ```
        
        ### AUTO Validation
        - **Valid:** {{ validate_with_auto.is_valid | default(false) }}
        - **Mode Used:** {{ validate_with_auto.mode | default('unknown') }}
        - **Schema Used:** AUTO-generated
        
        ## Summary
        
        This validation test demonstrates different validation modes and schema inference capabilities.
        
        ---
        *Generated by Test Validation Pipeline*
    dependencies:
      - validate_strict
      - validate_lenient
      - infer_schema
      - validate_with_auto

outputs:
  report_file: "{{ save_validation_report.filepath }}"
  strict_valid: "{{ validate_strict.is_valid | default(false) }}"
  lenient_valid: "{{ validate_lenient.is_valid | default(false) }}"
  inferred_schema: "{{ infer_schema.schema }}"