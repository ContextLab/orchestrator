id: data-processing
name: Data Processing Pipeline
description: Process and validate data from various sources

parameters:
  data_source:
    type: string
    required: true
    description: Path to data file (CSV or JSON)
  output_format:
    type: string
    default: json
    description: Output format (json, csv, or yaml)

steps:
  - id: load_data
    tool: filesystem
    action: read
    parameters:
      path: "{{data_source}}"
  
  - id: validate_data
    tool: validation
    action: validate
    parameters:
      data: "{{load_data.content | from_json}}"
      schema:
        type: object
        properties:
          records:
            type: array
      mode: strict
    dependencies:
      - load_data
  
  - id: transform_data
    tool: data-processing
    action: transform
    parameters:
      data: "{{load_data.content | from_json}}"
      operation:
        transformations:
          - type: filter
            field: active
            value: true
          - type: aggregate
            operation: sum
            field: value
    dependencies:
      - validate_data
  
  - id: save_results
    tool: filesystem
    action: write
    parameters:
      path: "examples/outputs/data_processing/processed_data.{{output_format}}"
      content: "{{transform_data.result | to_json}}"
    dependencies:
      - transform_data
      
  - id: save_report
    tool: filesystem
    action: write
    parameters:
      path: "examples/outputs/data_processing/processing_report.md"
      content: |
        # Data Processing Report
        
        **Date:** {{ execution.timestamp }}
        **Source File:** {{data_source}}
        **Output Format:** {{output_format}}
        
        ## Validation Results
        
        - Validation Status: {{validate_data.is_valid ? 'Passed' : 'Failed'}}
        - Validation Messages: {{validate_data.messages | default('None')}}
        
        ## Processing Summary
        
        - Transformations Applied: Filter (active=true), Aggregate (sum of values)
        - Output File: examples/outputs/data_processing/processed_data.{{output_format}}
        
        ---
        *Generated by Data Processing Pipeline*
    dependencies:
      - save_results

outputs:
  original_data: "{{load_data.content}}"
  validated: "{{validate_data.is_valid}}"
  transformed: "{{transform_data.result}}"
  output_file: "{{save_results.filepath}}"