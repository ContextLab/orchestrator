id: control-flow-advanced
# Advanced Control Flow Example
# Combines conditionals and loops in a practical scenario
name: Multi-Stage Text Processing
description: Process text through multiple stages with conditional paths
version: "1.0.0"

parameters:
  input_text:
    type: string
    description: Text to process
    default: "This is a sample text for processing."
  languages:
    type: array
    default: ["es", "fr", "de"]
    description: Languages to translate to
  quality_threshold:
    type: number
    default: 0.7
    description: Quality threshold for translations
  output:
    type: string
    default: "examples/outputs/control_flow_advanced"
    description: Output directory for results
    
steps:
  # Initial analysis
  - id: analyze_text
    action: analyze_text
    parameters:
      text: "{{ input_text }}"
      model: <AUTO task="analyze">Select a model for text analysis</AUTO>
      analysis_type: "comprehensive"
      
  # Determine if text needs enhancement
  - id: check_quality
    action: generate_text
    parameters:
      prompt: |
        Based on this text analysis, determine if the text quality is below {{ quality_threshold }} (out of 1.0) and needs improvement:
        
        Analysis: {{ analyze_text }}
        
        Respond with either "improve" or "acceptable" based on the quality assessment.
      model: <AUTO task="analyze">Select a model for quality assessment</AUTO>
      max_tokens: 50
    dependencies:
      - analyze_text
      
  # Conditional enhancement
  - id: enhance_text
    action: generate_text
    if: "{{ 'improve' in check_quality }}"
    parameters:
      prompt: |
        Improve the following text based on this analysis:
        Analysis: {{ analyze_text }}
        
        Text: {{ input_text }}
      model: <AUTO task="generate">Select a model for text improvement</AUTO>
      max_tokens: 500
    dependencies:
      - check_quality
      
  # Determine which text to use (creates a concrete value we can reference)
  - id: select_text
    action: generate_text
    parameters:
      prompt: |
        {% if check_quality and 'improve' in check_quality and enhance_text %}
        Return the enhanced text exactly as is:
        {{ enhance_text }}
        {% else %}
        Return the original text exactly as is:
        {{ input_text }}
        {% endif %}
      model: <AUTO task="generate">Select a model to pass through text</AUTO>
      max_tokens: 600
    dependencies:
      - enhance_text
      - check_quality
      
  # Translate to multiple languages
  - id: translate_text
    for_each: "{{ languages }}"
    max_parallel: 2
    steps:
      # Translate
      - id: translate
        action: generate_text
        parameters:
          prompt: |
            Translate the following text to {{ $item }}:
            
            {% if select_text %}{{ select_text }}{% else %}{{ input_text }}{% endif %}
          model: <AUTO task="translate">Select a model for translation to {{ $item }}</AUTO>
          max_tokens: 600
          
      # Validate translation quality
      - id: validate_translation
        action: analyze_text
        parameters:
          text: "{{ translate }}"
          model: <AUTO task="analyze">Select a model for quality assessment</AUTO>
          analysis_type: "quality"
        dependencies:
          - translate
          
      # Save translation
      - id: save_translation
        tool: filesystem
        action: write
        parameters:
          path: "{{ output }}/translations/{{ input_text[:50] | slugify }}_{{ $item }}.txt"
          content: |
            # Translation to {{ $item }}
            
            ## Source Text Used
            {% if select_text %}{{ select_text }}{% else %}{{ input_text }}{% endif %}
            
            ## Translated Text
            {{ translate }}
            
            ## Quality Assessment
            {{ validate_translation }}
        dependencies:
          - validate_translation
    dependencies:
      - select_text
      
  # Example of multiple conditionals: Create different summary types
  - id: create_brief_summary
    action: generate_text
    if: "{{ languages | length <= 2 }}"
    parameters:
      prompt: |
        Create a brief summary of the translation process.
        Original text: {{ input_text }}
        Languages: {{ languages }}
      model: <AUTO task="summarize">Select a model for brief summary</AUTO>
      max_tokens: 100
    dependencies:
      - translate_text
      
  - id: create_detailed_summary  
    action: generate_text
    if: "{{ languages | length > 2 }}"
    parameters:
      prompt: |
        Create a detailed summary of the multi-language translation process.
        Original text: {{ input_text }}
        Languages: {{ languages }}
        Analysis: {{ analyze_text }}
      model: <AUTO task="summarize">Select a model for detailed summary</AUTO>
      max_tokens: 200
    dependencies:
      - translate_text
      
  # Example of aggregation: Count successful operations
  - id: check_translation_count
    action: generate_text
    parameters:
      prompt: |
        Count how many languages were successfully translated.
        Languages attempted: {{ languages }}
        Brief summary: {{ create_brief_summary | default('N/A') }}
        Detailed summary: {{ create_detailed_summary | default('N/A') }}
        Return just a number.
      model: <AUTO task="analyze">Select a model for counting</AUTO>
      max_tokens: 10
    dependencies:
      - create_brief_summary
      - create_detailed_summary
  
  # Create final report
  - id: create_report
    tool: filesystem
    action: write
    parameters:
      path: "{{ output }}/{{ input_text[:50] | slugify }}_report.md"
      content: |
        # Multi-Stage Text Processing Report
        
        ## Original Text
        {{ input_text }}
        
        ## Analysis
        {{ analyze_text }}
        
        ## Quality Check Result
        {{ check_quality }}
        
        ## Enhancement Status
        {% if enhance_text %}Enhanced version was created{% else %}Original text was sufficient{% endif %}
        
        ## Final Text Used for Translation
        {% if select_text %}{{ select_text }}{% else %}{{ input_text }}{% endif %}
        
        ## Translations
        Attempted translations to: {{ languages | join(', ') }}
        
        Check the {{ output }}/translations/ directory for successful translations.
    dependencies:
      - translate_text
      
outputs:
  analysis: "{{ analyze_text }}"
  quality_check: "{{ check_quality }}"
  enhanced: "{{ enhance_text | default('N/A') }}"
  final_text: "{{ select_text }}"
  translation_count: "{{ check_translation_count }}"
  report_file: "{{ output }}/{{ input_text[:50] | slugify }}_report.md"