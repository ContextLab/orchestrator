# Simplified Iterative Fact-Checking Pipeline
# Avoids complex template logic for better compatibility
id: iterative_fact_checker_simple
name: Simple Iterative Fact Checker
description: Iteratively adds references to documents using simpler logic
version: "2.1.0"

parameters:
  input_document:
    type: string
    default: "test_climate_document.md"
    description: Path to the document to fact-check
  quality_threshold:
    type: number
    default: 0.95
    description: Minimum percentage of claims that must have references

steps:
  # Load the initial document
  - id: load_document
    tool: filesystem
    action: read
    parameters:
      path: "{{ parameters.input_document }}"
    
  # Single iteration of fact-checking (can be run multiple times manually)
  - id: extract_claims
    action: generate_text
    dependencies:
      - load_document
    parameters:
      prompt: |
        Analyze this document and extract all factual claims and their references.
        
        Document:
        {{ load_document.result.content }}
        
        Please analyze the document and provide:
        1. A list of all factual claims found
        2. For each claim, indicate if it has a reference/citation 
        3. Count the total number of claims
        4. Count how many have references
        5. Calculate the percentage with references
        
        Format your response as JSON:
        {
          "claims": [
            {"text": "claim text here", "has_reference": true/false, "reference_url": "url if available"},
            ...
          ],
          "total_claims": number,
          "claims_with_references": number,
          "percentage_referenced": number
        }
      model: "claude-sonnet-4-20250514"
      max_tokens: 3000
  
  # Find citations for unreferenced claims
  - id: find_citations
    action: generate
    dependencies:
      - extract_claims
    parameters:
      prompt: |
        Find reliable sources and citations for these unreferenced claims from the document:
        
        Claims analysis result: {{ extract_claims.result }}
        
        Please find citations for any claims that don't have references yet.
        
        For each claim, provide:
        1. A reliable source URL (use real, authoritative sources like NASA, NOAA, IPCC, Nature, Science, etc.)
        2. The source title
        3. A brief explanation of why this source supports the claim
        
        Format as a structured list with clear citations.
      model: "claude-sonnet-4-20250514"
      max_tokens: 3000
  
  # Update document with new references
  - id: update_document
    action: generate
    dependencies:
      - load_document
      - extract_claims
      - find_citations
    parameters:
      prompt: |
        Update this document by adding citations for all unreferenced claims.
        
        Original document:
        {{ load_document.result.content }}
        
        Claims analysis result: {{ extract_claims.result }}
        
        New citations to add:
        {{ find_citations.result }}
        
        Instructions:
        1. Add inline citations [1], [2], etc. after each claim
        2. Add a "References" section at the end with all citations
        3. Keep the document structure and content otherwise unchanged
        4. Use consistent formatting throughout
        
        Return the complete updated document with all improvements.
      model: "claude-sonnet-4-20250514"
      max_tokens: 6000
  
  # Save the updated document
  - id: save_document
    tool: filesystem
    action: write
    dependencies:
      - update_document
    parameters:
      path: "{{ output_path }}/{{ parameters.input_document | basename | regex_replace('\\.md$', '') }}_fact_checked.md"
      content: "{{ update_document.result }}"
  
  # Generate report
  - id: generate_report
    tool: filesystem
    action: write
    dependencies:
      - extract_claims
      - save_document
    parameters:
      path: "{{ output_path }}/fact_checking_report.md"
      content: |
        # Fact-Checking Report
        
        ## Document Information
        - **Source Document**: {{ parameters.input_document }}
        - **Date Processed**: {{ timestamp }}
        
        ## Analysis Summary
        Claims Analysis Result: {{ extract_claims.result }}
        - **Quality Threshold**: {{ parameters.quality_threshold * 100 }}%
        
        ## Status
        Document processed and references updated as needed.
        
        ## Output
        - Updated document: `{{ parameters.input_document | basename | regex_replace('\\.md$', '') }}_fact_checked.md`
        
        ---
        *Generated by Simple Iterative Fact Checker Pipeline v2.1*

outputs:
  updated_document: "{{ save_document.path }}"
  report: "{{ generate_report.path }}"
  claims_analysis: "{{ extract_claims.result }}"
  citations_found: "{{ find_citations.result }}"