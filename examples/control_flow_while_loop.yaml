id: control-flow-while-loop
# While Loop Example
# Demonstrates iterative processing with a simple counter
name: Iterative Number Guessing
description: Generate numbers until we reach a target
version: "1.0.0"

parameters:
  target_number:
    type: integer
    default: 42
    description: Target number to reach
  max_attempts:
    type: integer
    default: 10
    description: Maximum attempts
    
steps:
  # Initialize the process
  - id: initialize
    action: generate_text
    parameters:
      prompt: "Starting number guessing game. Target is {{ target_number }}"
      model: <AUTO task="summarize">Select a model for initialization</AUTO>
      max_tokens: 50
      
  # Create initial state file
  - id: init_state
    tool: filesystem
    action: write
    parameters:
      path: "examples/outputs/control_flow_while_loop/state/current_guess.txt"
      content: "0"
    dependencies:
      - initialize
      
  # Iterative guessing loop
  - id: guessing_loop
    while: "{{ current_guess != target_number }}"
    max_iterations: "{{ max_attempts }}"
    steps:
      # Read current guess
      - id: read_guess
        tool: filesystem
        action: read
        parameters:
          path: "examples/outputs/control_flow_while_loop/state/current_guess.txt"
          
      # Generate next guess
      - id: generate_guess
        action: generate_text
        parameters:
          prompt: |
            We're trying to guess the number {{ target_number }}.
            Current guess: {{ read_guess.content }}
            Iteration: {{ guessing_loop.iteration }}
            
            What number should we guess next? Reply with just a number between 1 and 100.
          model: <AUTO task="generate">Select a model for number generation</AUTO>
          max_tokens: 10
        dependencies:
          - read_guess
          
      # Extract number from response
      - id: extract_number
        action: analyze_text
        parameters:
          text: "Generated guess: {{ generate_guess.result | regex_search('[0-9]+') | default('25') }}"
          model: <AUTO task="analyze">Select a model for number extraction</AUTO>
          analysis_type: "extract_number"
        dependencies:
          - generate_guess
          
      # Update state
      - id: update_state
        tool: filesystem
        action: write
        parameters:
          path: "examples/outputs/control_flow_while_loop/state/current_guess.txt"
          content: "{{ generate_guess.result | regex_search('[0-9]+') | default('25') }}"
        dependencies:
          - extract_number
          
      # Log the attempt
      - id: log_attempt
        tool: filesystem
        action: write
        parameters:
          path: "examples/outputs/control_flow_while_loop/logs/attempt_{{ guessing_loop.iteration }}.txt"
          content: |
            Iteration: {{ guessing_loop.iteration }}
            Previous guess: {{ read_guess.content }}
            New guess: {{ generate_guess.result | regex_search('[0-9]+') | default('25') }}
            Target: {{ target_number }}
        dependencies:
          - update_state
          
      # Update loop state
      - id: update_loop_state
        action: generate_text
        parameters:
          prompt: "Attempt {{ guessing_loop.iteration }} complete"
          model: <AUTO task="summarize">Select a model for status update</AUTO>
          max_tokens: 20
        dependencies:
          - log_attempt
    dependencies:
      - init_state
      
  # Final result
  - id: final_result
    tool: filesystem
    action: write
    parameters:
      path: "examples/outputs/control_flow_while_loop/result.txt"
      content: |
        # Number Guessing Results
        
        Target number: {{ target_number }}
        Total attempts: {{ guessing_loop.iterations | default(0) }}
        Success: {{ guessing_loop.completed | default(false) }}
    dependencies:
      - guessing_loop
      
outputs:
  target: "{{ target_number }}"
  attempts: "{{ guessing_loop.iterations | default(0) }}"
  result_file: "{{ final_result.filepath }}"