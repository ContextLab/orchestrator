name: "Interactive Chat Bot with Save"
description: "Chatbot demo that saves conversation to file"
model: "anthropic/claude-3-haiku-20240307"
version: "1.0.0"

inputs:
  conversation_topic:
    type: string
    required: true
  num_exchanges:
    type: integer
    default: 3
  user_persona:
    type: string
    default: "curious-learner"
  bot_persona:
    type: string
    default: "helpful-assistant"

steps:
  - id: user_intro
    action: |
      As a {{user_persona}}, generate an opening message about {{conversation_topic}}.
      
      The message should:
      1. Show genuine curiosity
      2. Ask an engaging question
      3. Be natural and conversational
      4. Set the tone for the discussion
    model: "openai/gpt-4o-mini"
    
  - id: bot_response_1
    action: |
      As a {{bot_persona}}, respond to this message about {{conversation_topic}}:
      
      User: {{user_intro.result}}
      
      Your response should:
      1. Be helpful and informative
      2. Match the {{bot_persona}} style
      3. Encourage further discussion
      4. Provide value to the user
    depends_on: [user_intro]
    
  - id: user_followup_1
    action: |
      As a {{user_persona}}, continue the conversation:
      
      Previous exchange:
      User: {{user_intro.result}}
      Assistant: {{bot_response_1.result}}
      
      Generate a follow-up that:
      1. Shows understanding
      2. Asks for clarification or more details
      3. Maintains the conversational flow
    model: "openai/gpt-4o-mini"
    depends_on: [bot_response_1]
    
  - id: bot_response_2
    action: |
      Continue as {{bot_persona}}:
      
      Conversation so far:
      User: {{user_intro.result}}
      Assistant: {{bot_response_1.result}}
      User: {{user_followup_1.result}}
      
      Provide a helpful response that:
      1. Addresses the user's question
      2. Adds depth to the discussion
      3. Maintains engagement
    depends_on: [user_followup_1]
    
  - id: format_conversation
    action: |
      Format the conversation as markdown:
      
      # AI Conversation: {{conversation_topic}}
      
      **Generated on:** {{execution.timestamp}}  
      **User Persona:** {{user_persona}}  
      **Bot Persona:** {{bot_persona}}
      
      ## Conversation Transcript
      
      ### User
      {{user_intro.result}}
      
      ### Assistant
      {{bot_response_1.result}}
      
      ### User
      {{user_followup_1.result}}
      
      ### Assistant
      {{bot_response_2.result}}
      
      ---
      
      ## Conversation Metadata
      - Topic: {{conversation_topic}}
      - Number of Exchanges: 2
      - User Model: OpenAI GPT-4o-mini (simulating {{user_persona}})
      - Assistant Model: Anthropic Claude 3 Haiku (as {{bot_persona}})
      
      ## How to Use with Real Users
      
      To adapt this for real users, replace the user simulation steps with:
      1. Web interface or CLI for user input
      2. Session management for conversation context
      3. Real-time response generation
      
      *Generated by Orchestrator Chatbot Pipeline*
    depends_on: [bot_response_2]
    
  - id: save_conversation
    action: "write"
    tool: "filesystem"
    parameters:
      path: "examples/output/chat_{{conversation_topic | replace(' ', '_') | lower}}.md"
      content: "{{format_conversation.result}}"
    depends_on: [format_conversation]

outputs:
  conversation: "{{format_conversation.result}}"
  file_path: "examples/output/chat_{{conversation_topic | replace(' ', '_') | lower}}.md"
  save_result: "{{save_conversation.result}}"
