name: error_handling_showcase
version: 1.0.0
description: 'Comprehensive examples of advanced error handling with real-world scenarios.

  Demonstrates the new ErrorHandler system with various recovery strategies.

  '
inputs:
  api_endpoint:
    type: string
    default: https://api.example.com
    description: Primary API endpoint
  backup_endpoint:
    type: string
    default: https://backup-api.example.com
    description: Backup API endpoint for failover
  data_file:
    type: string
    default: ./data/input.json
    description: Input data file path
steps:
- id: simple_error_example
  action: Process data from API
  parameters:
    url: '{{api_endpoint}}/data'
    method: GET
  on_error:
    handler_action: Log error and use default data
    error_types:
    - ConnectionError
    - TimeoutError
    fallback_value:
      data: default_fallback_data
    log_level: warning
- id: multi_handler_example
  action: Fetch critical business data
  parameters:
    primary_url: '{{api_endpoint}}/critical'
    timeout: 10
  on_error:
  - handler_action: 'Switch to backup endpoint: {{backup_endpoint}}/critical'
    error_types:
    - ConnectionError
    - HTTPError
    error_codes:
    - 500
    - 502
    - 503
    - 504
    priority: 1
    retry_with_handler: true
    max_handler_retries: 2
    timeout: 15
  - handler_action: Retry with exponential backoff
    error_types:
    - TimeoutError
    - ConnectionError
    priority: 5
    retry_with_handler: true
    max_handler_retries: 3
  - handler_action: Send alert and use cached data
    error_types:
    - '*'
    priority: 10
    continue_on_handler_failure: true
    fallback_value: '{{cached_data}}'
- id: pattern_matching_example
  action: Process user authentication
  parameters:
    auth_endpoint: '{{api_endpoint}}/auth'
    credentials: '{{user_credentials}}'
  on_error:
  - handler_action: Refresh authentication token
    error_types:
    - PermissionError
    error_patterns:
    - token.*expired
    - unauthorized.*access
    - invalid.*credentials
    error_codes:
    - 401
    - 403
    priority: 1
    retry_with_handler: true
  - handler_action: Wait and retry with backoff
    error_types:
    - ConnectionError
    error_patterns:
    - rate.*limit.*exceeded
    - too.*many.*requests
    error_codes:
    - 429
    priority: 2
    retry_with_handler: true
    max_handler_retries: 5
  - handler_action: Switch to alternative auth service
    error_types:
    - ConnectionError
    error_codes:
    - 500
    - 502
    - 503
    priority: 3
    retry_with_handler: true
- id: filesystem_error_example
  action: Process data file
  parameters:
    file_path: '{{data_file}}'
    backup_path: ./data/backup.json
  on_error:
  - handler_action: Create default data file
    error_types:
    - FileNotFoundError
    priority: 1
    retry_with_handler: true
  - handler_action: Fix file permissions and retry
    error_types:
    - PermissionError
    priority: 2
    retry_with_handler: true
    max_handler_retries: 1
  - handler_action: 'Use backup file: {{backup_path}}'
    error_types:
    - ValueError
    - UnicodeDecodeError
    priority: 3
    retry_with_handler: true
- id: network_recovery_example
  action: Download external resource
  parameters:
    primary_url: '{{api_endpoint}}/download'
    mirror_urls:
    - https://mirror1.example.com/resource
    - https://mirror2.example.com/resource
    - https://mirror3.example.com/resource
  on_error:
  - handler_action: 'Try first mirror: {{mirror_urls[0]}}'
    error_types:
    - ConnectionError
    - TimeoutError
    priority: 1
    retry_with_handler: true
    continue_on_handler_failure: true
  - handler_action: 'Try second mirror: {{mirror_urls[1]}}'
    error_types:
    - '*'
    priority: 2
    retry_with_handler: true
    continue_on_handler_failure: true
  - handler_action: 'Try third mirror: {{mirror_urls[2]}}'
    error_types:
    - '*'
    priority: 3
    retry_with_handler: true
    continue_on_handler_failure: true
  - handler_action: Use local cached version
    error_types:
    - '*'
    priority: 10
    fallback_value: local_cache://resource
- id: model_api_example
  action: Generate AI response
  parameters:
    model: claude-sonnet-4-20250514
    prompt: 'Analyze the following data: {{processed_data}}'
    max_tokens: 1000
  on_error:
  - handler_action: Refresh API credentials
    error_types:
    - PermissionError
    - AuthenticationError
    error_patterns:
    - api.*key.*invalid
    - authentication.*failed
    error_codes:
    - 401
    - 403
    priority: 1
    retry_with_handler: true
  - handler_action: Wait for rate limit reset
    error_types:
    - ConnectionError
    error_patterns:
    - rate.*limit
    - quota.*exceeded
    error_codes:
    - 429
    priority: 2
    retry_with_handler: true
    max_handler_retries: 3
  - handler_action: 'Use fallback model: gpt-4'
    error_types:
    - FileNotFoundError
    - ValueError
    error_patterns:
    - model.*not.*found
    - model.*unavailable
    priority: 3
    retry_with_handler: true
  - handler_action: Use local model as backup
    error_types:
    - ConnectionError
    - TimeoutError
    priority: 5
    fallback_value: Using local model due to service unavailability
- id: data_processing_chain
  action: Start data processing pipeline
  parameters:
    input_source: '{{api_endpoint}}/raw-data'
  depends_on:
  - simple_error_example
  on_error:
  - handler_task_id: error_recovery_task
    error_types:
    - '*'
    priority: 1
- id: error_recovery_task
  action: Execute comprehensive error recovery
  parameters:
    failed_task_id: '{{error.failed_task_id}}'
    error_type: '{{error.error_type}}'
    error_message: '{{error.error_message}}'
    recovery_strategy: comprehensive
- id: circuit_breaker_example
  action: Call unreliable service
  parameters:
    service_url: '{{api_endpoint}}/unreliable'
    max_failures: 5
    failure_window: 300
  on_error:
  - handler_action: Implement circuit breaker logic
    error_types:
    - ConnectionError
    - TimeoutError
    priority: 1
    retry_with_handler: false
    continue_on_handler_failure: true
    fallback_value: Service temporarily unavailable - circuit breaker open
- id: context_aware_example
  action: Process user request with context
  parameters:
    user_id: '{{user.id}}'
    request_type: '{{request.type}}'
    priority: '{{request.priority}}'
  on_error:
  - handler_action: High priority recovery for user {{user_id}}
    error_types:
    - '*'
    priority: 1
    enabled: '{{request.priority == ''high''}}'
    retry_with_handler: true
    max_handler_retries: 5
  - handler_action: Standard recovery procedure
    error_types:
    - '*'
    priority: 5
    enabled: '{{request.priority != ''high''}}'
    retry_with_handler: true
    max_handler_retries: 2
- id: monitored_operation
  action: Critical business operation with monitoring
  parameters:
    operation_type: financial_transaction
    transaction_id: '{{transaction.id}}'
  on_error:
  - handler_action: Send critical alert to operations team
    error_types:
    - '*'
    priority: 1
    continue_on_handler_failure: true
    retry_with_handler: false
    capture_error_context: true
    log_level: critical
  - handler_action: Attempt automated transaction recovery
    error_types:
    - ConnectionError
    - TimeoutError
    - ValueError
    priority: 2
    retry_with_handler: true
    max_handler_retries: 3
  - handler_action: Escalate to manual intervention queue
    error_types:
    - '*'
    priority: 10
    fallback_value: Transaction queued for manual review
global_error_handlers:
- handler_action: Log all unhandled errors to central logging system
  error_types:
  - '*'
  priority: 1000
  continue_on_handler_failure: true
  capture_error_context: true
  log_level: error
outputs:
  processing_results: '{{data_processing_chain.result}}'
  error_summary: '{{error_recovery_task.result}}'
  monitoring_data: '{{monitored_operation.result}}'
metadata:
  version: 2.0.0
  compatibility: 1.0.0
  migration_notes: Enhanced with new architecture features while maintaining backward
    compatibility
enhanced_outputs:
  processing_results:
    description: 'Enhanced output: processing_results'
    value: '{{data_processing_chain.result}}'
    type: auto-detect
  error_summary:
    description: 'Enhanced output: error_summary'
    value: '{{error_recovery_task.result}}'
    type: auto-detect
  monitoring_data:
    description: 'Enhanced output: monitoring_data'
    value: '{{monitored_operation.result}}'
    type: auto-detect
