id: research_advanced_tools
name: Research Pipeline with Advanced Tools
description: Advanced research pipeline using web search, content extraction, and
  PDF generation
version: 2.0.0
parameters:
  topic: &id001
    type: string
    default: quantum computing applications
  max_results: &id002
    type: integer
    default: 10
  compile_to_pdf: &id003
    type: boolean
    default: true
  output_path: &id004
    type: string
    default: examples/outputs/research_advanced_tools
steps:
- id: search_topic
  tool: web-search
  action: search
  parameters:
    query: '{{ topic }} latest developments'
    max_results: '{{ max_results | int }}'
    backend: duckduckgo
- id: deep_search
  tool: web-search
  action: search
  parameters:
    query: '{{ topic }} research papers technical details implementation'
    max_results: '{{ max_results | int }}'
    backend: duckduckgo
  dependencies:
  - search_topic
- id: extract_content
  tool: headless-browser
  action: scrape
  parameters:
    url: '{{ search_topic.results[0].url if search_topic.results and search_topic.results|length
      > 0 else deep_search.results[0].url if deep_search.results and deep_search.results|length
      > 0 else '''' }}'
  dependencies:
  - search_topic
  - deep_search
  condition: '{{ (search_topic.results | length > 0) or (deep_search.results | length
    > 0) }}'
  continue_on_error: true
- id: analyze_findings
  action: analyze_text
  parameters:
    text: "Topic: {{ topic }}\n\nPrimary search results ({{ search_topic.total_results\
      \ }} total):\n{% for result in search_topic.results[:max_results] %}\n{{ loop.index\
      \ }}. {{ result.title }}\n   URL: {{ result.url }}\n   Summary: {{ result.snippet\
      \ }}\n{% endfor %}\n\nTechnical search results ({{ deep_search.total_results\
      \ }} total):\n{% for result in deep_search.results %}\n- {{ result.title }}:\
      \ {{ result.snippet }}\n{% endfor %}\n\n{% if extract_content is defined and\
      \ 'word_count' in extract_content and extract_content.word_count > 0 %}\nExtracted\
      \ content from primary source:\nTitle: {{ extract_content.title }}\nKey content:\
      \ {{ extract_content.text | truncate(1500) }}...\n{% endif %}\n"
    prompt: 'You are an expert research analyst. Analyze the search results and extracted
      content for "{{ topic }}".


      Create a comprehensive analysis with the following structure:


      Start with a 2-3 paragraph overview that synthesizes the most important insights
      about {{ topic }}, highlighting recent developments and key themes.


      Then provide:

      1. Key Findings - 5-8 specific, substantive points with examples and data from
      the sources

      2. Technical Analysis - Deep dive into implementation details, methodologies,
      and specific technologies

      3. Current Trends and Future Directions - What''s emerging and where the field
      is heading

      4. Critical Evaluation - Strengths, limitations, controversies, and gaps in
      current approaches


      Be specific, use examples from the sources, and avoid generic statements.

      Write in professional, analytical style suitable for an advanced research report.

      Do NOT include headers like "Executive Summary" or "Prepared by" statements.

      Start directly with the overview content.

      '
    model: <AUTO task="analyze">Select model for comprehensive analysis</AUTO>
    max_tokens: 2000
    analysis_type: comprehensive
  dependencies:
  - search_topic
  - deep_search
  - extract_content
- id: generate_recommendations
  action: generate_text
  parameters:
    prompt: 'Based on this analysis of {{ topic }}:


      {{ analyze_findings.result }}


      Create a strategic recommendations section:


      Start with a brief paragraph (2-3 sentences) summarizing the key opportunities
      and challenges that drive your recommendations.


      Then provide 4-6 specific, actionable recommendations that:

      - Address identified gaps or challenges

      - Leverage emerging opportunities

      - Provide clear next steps for researchers/practitioners

      - Consider both short-term and long-term perspectives


      Format as a numbered list with substantive explanations (3-4 sentences each).

      Be specific to {{ topic }} - avoid generic advice.

      Do NOT include any "Prepared by" statements or attribution.

      '
    model: <AUTO task="generate">Select model for recommendations</AUTO>
    max_tokens: 1500
  dependencies:
  - analyze_findings
- id: save_report
  tool: filesystem
  action: write
  parameters:
    path: '{{ output_path }}/research_{{ topic | slugify }}.md'
    content: "# Research Report: {{ topic }}\n\n**Generated on:** {{ execution.timestamp\
      \ }}\n**Total Sources Analyzed:** {{ search_topic.total_results + deep_search.total_results\
      \ }}\n\n---\n\n## Analysis\n\n{{ analyze_findings.result }}\n\n## Strategic\
      \ Recommendations\n\n{{ generate_recommendations.result }}\n\n## Search Results\n\
      \nThe analysis is based on {{ search_topic.total_results + deep_search.total_results\
      \ }} sources discovered through systematic web searches. The primary search\
      \ focused on recent developments in {{ topic }}, while the technical search\
      \ targeted research papers and implementation details.\n\n### Primary Sources\
      \ (Top {{ search_topic.results[:10] | length }} of {{ search_topic.total_results\
      \ }})\n{% for result in search_topic.results[:10] %}\n{{ loop.index }}. **[{{\
      \ result.title }}]({{ result.url }})**\n   - {{ result.snippet }}\n{% endfor\
      \ %}\n\n### Technical Sources ({{ deep_search.total_results }} results)\n{%\
      \ for result in deep_search.results[:5] %}\n{{ loop.index }}. **[{{ result.title\
      \ }}]({{ result.url }})**\n   - {{ result.snippet }}\n{% endfor %}\n\n## Extracted\
      \ Content Analysis\n\n{% if extract_content is defined and 'word_count' in extract_content\
      \ and extract_content.word_count > 0 %}\n**Primary Source:** {{ extract_content.title\
      \ }}\n**URL:** {{ extract_content.url }}\n**Content Summary:** Successfully\
      \ extracted {{ extract_content.word_count }} words from the primary source.\n\
      {% else %}\nContent extraction was not successful or was skipped.\n{% endif\
      \ %}\n\n## Methodology\n\nThis comprehensive research report was generated through\
      \ a multi-stage process combining automated web searches, content extraction,\
      \ and AI-powered analysis. The methodology ensures broad coverage of current\
      \ developments while maintaining analytical depth.\n\n### Search Strategy\n\
      - **Primary search**: \"{{ topic }} latest developments\" (yielded {{ search_topic.total_results\
      \ }} results)\n- **Technical search**: \"{{ topic }} research papers technical\
      \ details implementation\" (yielded {{ deep_search.total_results }} results)\n\
      - **Content extraction**: Automated extraction from primary sources when accessible\n\
      - **Analysis performed**: {{ execution.timestamp }}\n\n## References\n\nAll\
      \ sources were accessed on {{ execution.date }} and are listed in order of relevance.\n\
      \n{% for result in search_topic.results[:5] %}\n{{ loop.index }}. {{ result.title\
      \ }}. Available at: {{ result.url }}\n{% endfor %}\n{% for result in deep_search.results[:5]\
      \ %}\n{{ loop.index + 5 }}. {{ result.title }}. Available at: {{ result.url\
      \ }}\n{% endfor %}\n\n---\n*This report was automatically generated by the Orchestrator\
      \ Advanced Research Pipeline v2.0*\n"
  dependencies:
  - search_topic
  - deep_search
  - extract_content
  - analyze_findings
  - generate_recommendations
- id: read_report
  tool: filesystem
  action: read
  parameters:
    path: '{{ output_path }}/research_{{ topic | slugify }}.md'
  dependencies:
  - save_report
  condition: '{{ compile_to_pdf }}'
  continue_on_error: true
- id: compile_pdf
  tool: pdf-compiler
  action: compile
  parameters:
    markdown_content: '{{ read_report.result.content }}'
    output_path: '{{ output_path }}/research_{{ topic | slugify }}.pdf'
    title: 'Research Report: {{ topic }}'
    author: AI Research Assistant
    install_if_missing: true
  dependencies:
  - read_report
  condition: '{{ compile_to_pdf }}'
  continue_on_error: true
outputs:
  report_file: '{{ save_report.filepath }}'
  pdf_file: '{{ compile_pdf.output_path if compile_pdf.success else ''PDF generation
    skipped'' }}'
  total_sources: '{{ search_topic.total_results + deep_search.total_results }}'
  primary_source: '{{ search_topic.results[0].url if search_topic.results else ''No
    results found'' }}'
  analysis: '{{ analyze_findings.result }}'
metadata:
  version: 2.0.0
  compatibility: 1.0.0
  migration_notes: Enhanced with new architecture features while maintaining backward
    compatibility
inputs:
  topic:
    type: string
    default: *id001
    description: 'Parameter: topic'
    required: false
  max_results:
    type: string
    default: *id002
    description: 'Parameter: max_results'
    required: false
  compile_to_pdf:
    type: string
    default: *id003
    description: 'Parameter: compile_to_pdf'
    required: false
  output_path:
    type: string
    default: *id004
    description: 'Parameter: output_path'
    required: false
enhanced_outputs:
  report_file:
    description: 'Enhanced output: report_file'
    value: '{{ save_report.filepath }}'
    type: auto-detect
  pdf_file:
    description: 'Enhanced output: pdf_file'
    value: '{{ compile_pdf.output_path if compile_pdf.success else ''PDF generation
      skipped'' }}'
    type: auto-detect
  total_sources:
    description: 'Enhanced output: total_sources'
    value: '{{ search_topic.total_results + deep_search.total_results }}'
    type: auto-detect
  primary_source:
    description: 'Enhanced output: primary_source'
    value: '{{ search_topic.results[0].url if search_topic.results else ''No results
      found'' }}'
    type: auto-detect
  analysis:
    description: 'Enhanced output: analysis'
    value: '{{ analyze_findings.result }}'
    type: auto-detect
