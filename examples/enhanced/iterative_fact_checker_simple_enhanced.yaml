id: iterative_fact_checker_simple
name: Simple Iterative Fact Checker
description: Iteratively adds references to documents using simpler logic
version: 2.1.0
parameters:
  input_document: &id001
    type: string
    default: test_climate_document.md
    description: Path to the document to fact-check
  quality_threshold: &id002
    type: number
    default: 0.95
    description: Minimum percentage of claims that must have references
steps:
- id: load_document
  tool: filesystem
  action: read
  parameters:
    path: '{{ parameters.input_document }}'
- id: extract_claims
  action: generate_text
  dependencies:
  - load_document
  parameters:
    prompt: "Analyze this document and extract all factual claims and their references.\n\
      \nDocument:\n{{ load_document.result.content }}\n\nPlease analyze the document\
      \ and provide:\n1. A list of all factual claims found\n2. For each claim, indicate\
      \ if it has a reference/citation \n3. Count the total number of claims\n4. Count\
      \ how many have references\n5. Calculate the percentage with references\n\n\
      Format your response as JSON:\n{\n  \"claims\": [\n    {\"text\": \"claim text\
      \ here\", \"has_reference\": true/false, \"reference_url\": \"url if available\"\
      },\n    ...\n  ],\n  \"total_claims\": number,\n  \"claims_with_references\"\
      : number,\n  \"percentage_referenced\": number\n}\n"
    model: claude-sonnet-4-20250514
    max_tokens: 3000
- id: find_citations
  action: generate
  dependencies:
  - extract_claims
  parameters:
    prompt: 'Find reliable sources and citations for these unreferenced claims from
      the document:


      Claims analysis result: {{ extract_claims.result }}


      Please find citations for any claims that don''t have references yet.


      For each claim, provide:

      1. A reliable source URL (use real, authoritative sources like NASA, NOAA, IPCC,
      Nature, Science, etc.)

      2. The source title

      3. A brief explanation of why this source supports the claim


      Format as a structured list with clear citations.

      '
    model: claude-sonnet-4-20250514
    max_tokens: 3000
- id: update_document
  action: generate
  dependencies:
  - load_document
  - extract_claims
  - find_citations
  parameters:
    prompt: 'Update this document by adding citations for all unreferenced claims.


      Original document:

      {{ load_document.result.content }}


      Claims analysis result: {{ extract_claims.result }}


      New citations to add:

      {{ find_citations.result }}


      Instructions:

      1. Add inline citations [1], [2], etc. after each claim

      2. Add a "References" section at the end with all citations

      3. Keep the document structure and content otherwise unchanged

      4. Use consistent formatting throughout


      Return the complete updated document with all improvements.

      '
    model: claude-sonnet-4-20250514
    max_tokens: 6000
- id: save_document
  tool: filesystem
  action: write
  dependencies:
  - update_document
  parameters:
    path: '{{ output_path }}/{{ parameters.input_document | basename | regex_replace(''\.md$'',
      '''') }}_fact_checked.md'
    content: '{{ update_document.result }}'
- id: generate_report
  tool: filesystem
  action: write
  dependencies:
  - extract_claims
  - save_document
  parameters:
    path: '{{ output_path }}/fact_checking_report.md'
    content: '# Fact-Checking Report


      ## Document Information

      - **Source Document**: {{ parameters.input_document }}

      - **Date Processed**: {{ timestamp }}


      ## Analysis Summary

      Claims Analysis Result: {{ extract_claims.result }}

      - **Quality Threshold**: {{ parameters.quality_threshold * 100 }}%


      ## Status

      Document processed and references updated as needed.


      ## Output

      - Updated document: `{{ parameters.input_document | basename | regex_replace(''\\.md$'',
      '''') }}_fact_checked.md`


      ---

      *Generated by Simple Iterative Fact Checker Pipeline v2.1*

      '
outputs:
  updated_document: '{{ save_document.path }}'
  report: '{{ generate_report.path }}'
  claims_analysis: '{{ extract_claims.result }}'
  citations_found: '{{ find_citations.result }}'
metadata:
  version: 2.0.0
  compatibility: 1.0.0
  migration_notes: Enhanced with new architecture features while maintaining backward
    compatibility
inputs:
  input_document:
    type: string
    default: *id001
    description: 'Parameter: input_document'
    required: false
  quality_threshold:
    type: string
    default: *id002
    description: 'Parameter: quality_threshold'
    required: false
enhanced_outputs:
  updated_document:
    description: 'Enhanced output: updated_document'
    value: '{{ save_document.path }}'
    type: auto-detect
  report:
    description: 'Enhanced output: report'
    value: '{{ generate_report.path }}'
    type: auto-detect
  claims_analysis:
    description: 'Enhanced output: claims_analysis'
    value: '{{ extract_claims.result }}'
    type: auto-detect
  citations_found:
    description: 'Enhanced output: citations_found'
    value: '{{ find_citations.result }}'
    type: auto-detect
