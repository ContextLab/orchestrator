id: modular_analysis
name: Modular Analysis Pipeline
description: Main pipeline that orchestrates multiple analysis sub-pipelines
version: 2.0.0
parameters:
  dataset: &id001
    type: string
    default: input/dataset.csv
  analysis_types: &id002
    type: array
    default:
    - statistical
    - sentiment
    - trend
  output_format: &id003
    type: string
    default: pdf
steps:
- id: load_data
  tool: filesystem
  action: read
  parameters:
    path: '{{ output_path }}/{{ parameters.dataset }}'
- id: data_preprocessing
  tool: pipeline-executor
  action: execute
  parameters:
    pipeline: "id: data_preprocessing_sub\nname: Data Preprocessing Sub-Pipeline\n\
      steps:\n  - id: clean_data\n    tool: data-processing\n    action: clean\n \
      \   parameters:\n      data: \"{{ inputs.raw_data }}\"\n      remove_duplicates:\
      \ true\n      handle_missing: \"forward_fill\"\n  \n  - id: normalize_data\n\
      \    tool: data-processing\n    action: transform\n    parameters:\n      data:\
      \ \"{{ clean_data.result }}\"\n      operation:\n        type: \"normalize\"\
      \n        method: \"min-max\"\n\noutputs:\n  processed_data: \"{{ normalize_data.result\
      \ }}\"\n"
    inputs:
      raw_data: '{{ load_data.result.content }}'
    output_mapping:
      processed_data: processed_data
    inherit_context: true
    wait_for_completion: true
    timeout: 60000
    error_handling: fail
    retry_count: 3
    retry_delay: 1
  dependencies:
  - load_data
- id: statistical_analysis
  tool: pipeline-executor
  action: execute
  parameters:
    pipeline: examples/sub_pipelines/statistical_analysis.yaml
    inputs:
      data: '{{ load_data.result.content }}'
      confidence_level: 0.95
    output_mapping:
      statistics: statistical_results
      summary: statistical_summary
    inherit_context: true
    timeout: 60000
    error_handling: fail
    retry_count: 3
    retry_delay: 1
    wait_for_completion: true
  dependencies:
  - data_preprocessing
  condition: '''statistical'' in {{ parameters.analysis_types }}'
- id: sentiment_analysis
  tool: pipeline-executor
  action: execute
  parameters:
    pipeline: examples/sub_pipelines/sentiment_analysis.yaml
    inputs:
      data: '{{ load_data.result.content }}'
      text_column: comments
    output_mapping:
      sentiment_scores: sentiment_results
      sentiment_summary: sentiment_summary
    inherit_context: true
    timeout: 60000
    error_handling: fail
    retry_count: 3
    retry_delay: 1
    wait_for_completion: true
  dependencies:
  - data_preprocessing
  condition: '''sentiment'' in {{ parameters.analysis_types }}'
- id: trend_analysis
  tool: pipeline-executor
  action: execute
  parameters:
    pipeline: examples/sub_pipelines/trend_analysis.yaml
    inputs:
      data: '{{ load_data.result.content }}'
      time_column: timestamp
      value_columns:
      - sales
      - revenue
    output_mapping:
      trends: trend_results
      forecasts: trend_forecasts
    inherit_context: true
    timeout: 60000
    error_handling: fail
    retry_count: 3
    retry_delay: 1
    wait_for_completion: true
  dependencies:
  - data_preprocessing
  condition: '''trend'' in {{ parameters.analysis_types }}'
- id: combine_results
  tool: data-processing
  action: merge
  parameters:
    datasets:
    - name: statistical
      data: '{{ statistical_analysis.outputs.statistical_results | default({}) }}'
    - name: sentiment
      data: '{{ sentiment_analysis.outputs.sentiment_results | default({}) }}'
    - name: trend
      data: '{{ trend_analysis.outputs.trend_results | default({}) }}'
    merge_strategy: combine
  dependencies:
  - statistical_analysis
  - sentiment_analysis
  - trend_analysis
- id: generate_visualizations
  tool: visualization
  action: create_charts
  parameters:
    data: '{{ load_data.result.content }}'
    chart_types:
    - bar
    - line
    - scatter
    - pie
    - histogram
    output_dir: '{{ output_path }}/charts'
    title: Analysis Results
    theme: seaborn
  dependencies:
  - combine_results
- id: create_dashboard
  tool: visualization
  action: create_dashboard
  parameters:
    charts: '{{ generate_visualizations.charts }}'
    layout: grid
    title: Analysis Dashboard
    output_dir: '{{ output_path }}'
  dependencies:
  - generate_visualizations
- id: compile_report
  tool: filesystem
  action: write
  parameters:
    path: '{{ output_path }}/analysis_report.md'
    content: '# Comprehensive Analysis Report


      ## Executive Summary

      This report presents the results of comprehensive data analysis including statistical,
      sentiment, and trend analyses.


      ## Data Overview

      - Dataset: {{ parameters.dataset }}

      - Preprocessing steps applied: cleaning, normalization

      - Analysis types performed: {{ parameters.analysis_types | join('', '') }}


      ## Statistical Analysis

      {{ statistical_analysis.outputs.statistical_summary | default(''Statistical
      analysis was not performed.'') }}


      ## Sentiment Analysis

      {{ sentiment_analysis.outputs.sentiment_summary | default(''Sentiment analysis
      was not performed.'') }}


      ## Trend Analysis

      ### Identified Trends

      {{ trend_analysis.outputs.trend_results | default(''No trends identified'')
      }}


      ### Forecasts

      {{ trend_analysis.outputs.trend_forecasts | default(''No forecasts available'')
      }}


      ## Visualizations

      - Dashboard available at: {{ create_dashboard.url | default(''Dashboard not
      generated'') }}

      - Generated charts: {{ generate_visualizations.charts | default([]) | length
      }} files


      ---

      *Report generated on {{ execution.timestamp }}*

      '
  dependencies:
  - create_dashboard
- id: save_results
  tool: filesystem
  action: write
  parameters:
    path: '{{ output_path }}/results_{{ execution.timestamp | replace('':'', ''-'')
      }}.md'
    content: '# Modular Analysis Pipeline Results


      **Date:** {{ execution.timestamp }}

      **Pipeline ID:** modular_analysis


      ## Execution Summary


      Pipeline completed successfully.


      ### Analysis Types Performed

      {{ parameters.analysis_types | join('', '') }}


      ### Key Results

      - Statistical Analysis: {{ ''Completed'' if ''statistical'' in parameters.analysis_types
      else ''Skipped'' }}

      - Sentiment Analysis: {{ ''Completed'' if ''sentiment'' in parameters.analysis_types
      else ''Skipped'' }}

      - Trend Analysis: {{ ''Completed'' if ''trend'' in parameters.analysis_types
      else ''Skipped'' }}


      ### Output Files

      - Report: {{ output_path }}/analysis_report.{{ parameters.output_format }}

      - Dashboard: {{ create_dashboard.url | default(''Not generated'') }}

      - Charts: {{ generate_visualizations.charts | length }} files generated


      ---

      *Generated by Modular Analysis Pipeline*

      '
  dependencies:
  - compile_report
outputs:
  report_path: '{{ output_path }}/analysis_report.md'
  dashboard_url: '{{ create_dashboard.url | default('''') }}'
  charts_generated: '{{ generate_visualizations.charts | default([]) }}'
  results_file: '{{ output_path }}/results_{{ execution.timestamp | replace('':'',
    ''-'') }}.md'
metadata:
  version: 2.0.0
  compatibility: 1.0.0
  migration_notes: Enhanced with new architecture features while maintaining backward
    compatibility
inputs:
  dataset:
    type: string
    default: *id001
    description: 'Parameter: dataset'
    required: false
  analysis_types:
    type: string
    default: *id002
    description: 'Parameter: analysis_types'
    required: false
  output_format:
    type: string
    default: *id003
    description: 'Parameter: output_format'
    required: false
enhanced_outputs:
  report_path:
    description: 'Enhanced output: report_path'
    value: '{{ output_path }}/analysis_report.md'
    type: auto-detect
  dashboard_url:
    description: 'Enhanced output: dashboard_url'
    value: '{{ create_dashboard.url | default('''') }}'
    type: auto-detect
  charts_generated:
    description: 'Enhanced output: charts_generated'
    value: '{{ generate_visualizations.charts | default([]) }}'
    type: auto-detect
  results_file:
    description: 'Enhanced output: results_file'
    value: '{{ output_path }}/results_{{ execution.timestamp | replace('':'', ''-'')
      }}.md'
    type: auto-detect
