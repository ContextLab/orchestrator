id: control-flow-for-loop
# For Loop Example
# Demonstrates iteration over a list of items
name: Batch File Processing
description: Process multiple files in parallel
version: "1.0.0"

parameters:
  file_list:
    type: array
    default: ["file1.txt", "file2.txt", "file3.txt"]
    description: List of files to process
  output_dir:
    type: string
    default: "output"
    description: Output directory
    
steps:
  # Create output directory
  - id: create_output_dir
    tool: filesystem
    action: write
    parameters:
      path: "{{ output_dir }}/.gitkeep"
      content: "# Output directory for batch processing"
    
  # Process each file
  - id: process_files
    for_each: "{{ file_list }}"
    max_parallel: 2
    steps:
      # Read the file
      - id: read_file
        tool: filesystem
        action: read
        parameters:
          path: "data/{{ $item }}"
          
      # Analyze file content
      - id: analyze_content
        action: analyze_text
        parameters:
          text: "{{ read_file.content }}"
          model: <AUTO task="analyze">Select a model for text analysis</AUTO>
          analysis_type: "summary"
        dependencies:
          - read_file
          
      # Transform the content
      - id: transform_content
        action: generate_text
        parameters:
          prompt: |
            Transform the following text to be more concise:
            
            {{ read_file.content }}
            
            Key points from analysis: {{ analyze_content.result }}
          model: <AUTO task="generate">Select a model for text generation</AUTO>
          max_tokens: 300
        dependencies:
          - analyze_content
          
      # Save processed file
      - id: save_file
        tool: filesystem
        action: write
        parameters:
          path: "{{ output_dir }}/processed_{{ $item }}"
          content: |
            # Processed: {{ $item }}
            
            File index: {{ $index }}
            Is first: {{ $is_first }}
            Is last: {{ $is_last }}
            
            ## Original Size
            {{ read_file.size }} bytes
            
            ## Analysis
            {{ analyze_content.result }}
            
            ## Transformed Content
            {{ transform_content.result }}
        dependencies:
          - transform_content
    dependencies:
      - create_output_dir
    
  # Create summary report
  - id: create_summary
    tool: filesystem
    action: write
    parameters:
      path: "{{ output_dir }}/summary.md"
      content: |
        # Batch Processing Summary
        
        Total files processed: {{ file_list | length }}
        
        ## Files
        {% for file in file_list %}
        - {{ file }}
        {% endfor %}
        
        ## Results
        All files have been processed and saved to {{ output_dir }}/
    dependencies:
      - process_files
      
outputs:
  processed_files: "{{ file_list | length }}"
  output_directory: "{{ output_dir }}"
  summary_file: "{{ create_summary.filepath }}"