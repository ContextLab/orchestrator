{
  "automated_testing_system.yaml": {
    "status": "error",
    "error": "Failed to compile YAML: Failed to render template '<AUTO>analyze source code in {{source_dir}}:\n      1. Identify all functions, classes, and methods\n      2. Extract function signatures and parameters\n      3. Map dependencies and imports\n      4. Identify API endpoints if present\n      5. Detect design patterns used\n      6. Find complex logic areas\n      \n      Return comprehensive code structure analysis</AUTO>': 'source_dir' is undefined",
    "error_type": "YAMLCompilerError",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 149, in process_value\n    return template.render(**context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jinja2/environment.py\", line 1304, in render\n    self.environment.handle_exception()\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jinja2/environment.py\", line 939, in handle_exception\n    raise rewrite_traceback_stack(source=source)\n  File \"<template>\", line 1, in top-level template code\njinja2.exceptions.UndefinedError: 'source_dir' is undefined\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 94, in compile\n    processed = self._process_templates(raw_pipeline, context or {})\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 179, in _process_templates\n    return process_value(pipeline_def)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 174, in process_value\n    return {k: process_value(v) for k, v in value.items()}\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 176, in process_value\n    return [process_value(item) for item in value]\n            ^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 174, in process_value\n    return {k: process_value(v) for k, v in value.items()}\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 170, in process_value\n    raise TemplateRenderError(\norchestrator.compiler.yaml_compiler.TemplateRenderError: Failed to render template '<AUTO>analyze source code in {{source_dir}}:\n      1. Identify all functions, classes, and methods\n      2. Extract function signatures and parameters\n      3. Map dependencies and imports\n      4. Identify API endpoints if present\n      5. Detect design patterns used\n      6. Find complex logic areas\n      \n      Return comprehensive code structure analysis</AUTO>': 'source_dir' is undefined\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/test_all_examples_comprehensive.py\", line 112, in test_all_examples\n    result = await self.orchestrator.execute_yaml(yaml_content, inputs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/orchestrator.py\", line 406, in execute_yaml\n    pipeline = await self.yaml_compiler.compile(yaml_content, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 106, in compile\n    raise YAMLCompilerError(f\"Failed to compile YAML: {e}\") from e\norchestrator.compiler.yaml_compiler.YAMLCompilerError: Failed to compile YAML: Failed to render template '<AUTO>analyze source code in {{source_dir}}:\n      1. Identify all functions, classes, and methods\n      2. Extract function signatures and parameters\n      3. Map dependencies and imports\n      4. Identify API endpoints if present\n      5. Detect design patterns used\n      6. Find complex logic areas\n      \n      Return comprehensive code structure analysis</AUTO>': 'source_dir' is undefined\n",
    "inputs": {
      "test_suite": "integration_tests",
      "environment": "staging",
      "coverage_threshold": 0.85,
      "frameworks": [
        "pytest",
        "jest"
      ],
      "parallel_execution": true
    },
    "timestamp": "2025-07-17T08:55:42.754967"
  },
  "code_analysis_suite.yaml": {
    "status": "error",
    "error": "Failed to compile YAML: Failed to render template '{{doc_check}} == true': 'doc_check' is undefined",
    "error_type": "YAMLCompilerError",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 149, in process_value\n    return template.render(**context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jinja2/environment.py\", line 1304, in render\n    self.environment.handle_exception()\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jinja2/environment.py\", line 939, in handle_exception\n    raise rewrite_traceback_stack(source=source)\n  File \"<template>\", line 1, in top-level template code\njinja2.exceptions.UndefinedError: 'doc_check' is undefined\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 94, in compile\n    processed = self._process_templates(raw_pipeline, context or {})\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 179, in _process_templates\n    return process_value(pipeline_def)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 174, in process_value\n    return {k: process_value(v) for k, v in value.items()}\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 176, in process_value\n    return [process_value(item) for item in value]\n            ^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 174, in process_value\n    return {k: process_value(v) for k, v in value.items()}\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 170, in process_value\n    raise TemplateRenderError(\norchestrator.compiler.yaml_compiler.TemplateRenderError: Failed to render template '{{doc_check}} == true': 'doc_check' is undefined\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/test_all_examples_comprehensive.py\", line 112, in test_all_examples\n    result = await self.orchestrator.execute_yaml(yaml_content, inputs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/orchestrator.py\", line 406, in execute_yaml\n    pipeline = await self.yaml_compiler.compile(yaml_content, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 106, in compile\n    raise YAMLCompilerError(f\"Failed to compile YAML: {e}\") from e\norchestrator.compiler.yaml_compiler.YAMLCompilerError: Failed to compile YAML: Failed to render template '{{doc_check}} == true': 'doc_check' is undefined\n",
    "inputs": {
      "repo_path": "/tmp/sample_project",
      "languages": [
        "python",
        "javascript"
      ],
      "analysis_depth": "comprehensive",
      "security_scan": true
    },
    "timestamp": "2025-07-17T08:55:42.768032"
  },
  "content_creation_pipeline.yaml": {
    "status": "error",
    "error": "Failed to compile YAML: Failed to render template ''blog' in {{formats}}': 'formats' is undefined",
    "error_type": "YAMLCompilerError",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 149, in process_value\n    return template.render(**context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jinja2/environment.py\", line 1304, in render\n    self.environment.handle_exception()\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jinja2/environment.py\", line 939, in handle_exception\n    raise rewrite_traceback_stack(source=source)\n  File \"<template>\", line 1, in top-level template code\njinja2.exceptions.UndefinedError: 'formats' is undefined\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 94, in compile\n    processed = self._process_templates(raw_pipeline, context or {})\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 179, in _process_templates\n    return process_value(pipeline_def)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 174, in process_value\n    return {k: process_value(v) for k, v in value.items()}\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 176, in process_value\n    return [process_value(item) for item in value]\n            ^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 174, in process_value\n    return {k: process_value(v) for k, v in value.items()}\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 170, in process_value\n    raise TemplateRenderError(\norchestrator.compiler.yaml_compiler.TemplateRenderError: Failed to render template ''blog' in {{formats}}': 'formats' is undefined\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/test_all_examples_comprehensive.py\", line 112, in test_all_examples\n    result = await self.orchestrator.execute_yaml(yaml_content, inputs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/orchestrator.py\", line 406, in execute_yaml\n    pipeline = await self.yaml_compiler.compile(yaml_content, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 106, in compile\n    raise YAMLCompilerError(f\"Failed to compile YAML: {e}\") from e\norchestrator.compiler.yaml_compiler.YAMLCompilerError: Failed to compile YAML: Failed to render template ''blog' in {{formats}}': 'formats' is undefined\n",
    "inputs": {
      "topic": "sustainable technology trends",
      "content_types": [
        "blog_post",
        "social_media",
        "infographic"
      ],
      "target_audience": "technology professionals",
      "tone": "professional"
    },
    "timestamp": "2025-07-17T08:55:42.780376"
  },
  "creative_writing_assistant.yaml": {
    "status": "error",
    "error": "Failed to compile YAML: Failed to render template '{{include_worldbuilding}} == true and {{genre}} in ['fantasy', 'sci-fi', 'dystopian']': 'include_worldbuilding' is undefined",
    "error_type": "YAMLCompilerError",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 149, in process_value\n    return template.render(**context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jinja2/environment.py\", line 1304, in render\n    self.environment.handle_exception()\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jinja2/environment.py\", line 939, in handle_exception\n    raise rewrite_traceback_stack(source=source)\n  File \"<template>\", line 1, in top-level template code\njinja2.exceptions.UndefinedError: 'include_worldbuilding' is undefined\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 94, in compile\n    processed = self._process_templates(raw_pipeline, context or {})\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 179, in _process_templates\n    return process_value(pipeline_def)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 174, in process_value\n    return {k: process_value(v) for k, v in value.items()}\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 176, in process_value\n    return [process_value(item) for item in value]\n            ^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 174, in process_value\n    return {k: process_value(v) for k, v in value.items()}\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 170, in process_value\n    raise TemplateRenderError(\norchestrator.compiler.yaml_compiler.TemplateRenderError: Failed to render template '{{include_worldbuilding}} == true and {{genre}} in ['fantasy', 'sci-fi', 'dystopian']': 'include_worldbuilding' is undefined\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/test_all_examples_comprehensive.py\", line 112, in test_all_examples\n    result = await self.orchestrator.execute_yaml(yaml_content, inputs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/orchestrator.py\", line 406, in execute_yaml\n    pipeline = await self.yaml_compiler.compile(yaml_content, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 106, in compile\n    raise YAMLCompilerError(f\"Failed to compile YAML: {e}\") from e\norchestrator.compiler.yaml_compiler.YAMLCompilerError: Failed to compile YAML: Failed to render template '{{include_worldbuilding}} == true and {{genre}} in ['fantasy', 'sci-fi', 'dystopian']': 'include_worldbuilding' is undefined\n",
    "inputs": {
      "genre": "science fiction",
      "length": "short_story",
      "writing_style": "literary",
      "target_audience": "adult readers",
      "initial_premise": "A scientist discovers parallel universes through quantum computing",
      "chapter_count": 3
    },
    "timestamp": "2025-07-17T08:55:42.795578"
  },
  "customer_support_automation.yaml": {
    "status": "success",
    "execution_time": 37.561097,
    "inputs": {
      "ticket_id": "TICKET-2024-001",
      "ticketing_system": "zendesk",
      "auto_respond": true,
      "languages": [
        "en",
        "es"
      ],
      "escalation_threshold": -0.3
    },
    "outputs": {},
    "step_results": {
      "receive_ticket": "It seems like you might be affirming something, but I need a bit more context to respond appropriately. Could you clarify what you're referring to?",
      "detect_language": "Error executing task detect_language: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 3\n}\n]",
      "analyze_sentiment": "Based on the previous step's result regarding the \"receive_ticket\" response, it appears that there is a need for clarification on the sentiment being expressed. If you're affirming something, it would be helpful to provide more specific details about what you're referring to. This will allow for a more accurate sentiment analysis. Please share additional context or examples related to the sentiment you want to analyze, and I can assist you further!",
      "extract_entities": "Error executing task extract_entities: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 1\n}\n]",
      "classify_ticket": "It appears that there was an error when trying to execute the task for extracting entities, specifically due to exceeding the quota for the Google AI API. The error code 429 indicates that your current usage has surpassed the limits set by your plan. For further details, you can refer to the provided link about quota limits: [Gemini API quotas](https://ai.google.dev/gemini-api/docs/rate-limits). \n\nIf you need to continue with the task, you may want to check your plan and billing details to see if you can increase your quota or wait for the retry delay of 1 second before attempting the task again.",
      "search_knowledge_base": "Error executing task search_knowledge_base: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 58\n}\n]",
      "update_ticket": "It seems that you encountered an error while attempting to execute the task for extracting entities, specifically due to exceeding the quota for the Google AI API. The error code 429 indicates that your current usage has surpassed the limits set by your plan.\n\nTo resolve this issue, you have a couple of options:\n\n1. **Check Quota and Billing**: Review your plan and billing details to see if you can increase your quota. This might involve upgrading your plan or modifying your usage limits.\n\n2. **Retry After Delay**: If you're unable to adjust your quota immediately, you can wait for the retry delay of 1 second before attempting the task again.\n\nFor further details on the quota limits, you can refer to the [Gemini API quotas documentation](https://ai.google.dev/gemini-api/docs/rate-limits).\n\nPlease let me know if you need further assistance or if there's anything else I can help you with!",
      "check_automation_eligibility": "Error executing task check_automation_eligibility: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 55\n}\n]",
      "monitor_sla": "It looks like you encountered a quota issue with the Google AI API while trying to extract entities, which resulted in the error code 429. This indicates that your usage has exceeded the limits set by your current plan. \n\nTo address this problem, you have two primary options:\n\n1. **Check Quota and Billing**: Take some time to review your current plan and billing details. You may find that upgrading your plan or modifying your usage limits could help you increase your quota and prevent this issue in the future.\n\n2. **Retry After Delay**: If you're unable to adjust your quota right away, you might consider waiting for the specified retry delay of 1 second before attempting the task again. This could allow you to proceed without making immediate changes to your account.\n\nFor further guidance on managing your usage and understanding the limits associated with your plan, you can refer to the [Gemini API quotas documentation](https://ai.google.dev/gemini-api/docs/rate-limits). This resource will provide you with detailed information regarding quota limits and how to optimize your usage accordingly.",
      "generate_response": "Error executing task generate_response: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 51\n}\n]",
      "assign_to_agent": "It appears you encountered an error while trying to execute the task for checking automation eligibility due to exceeding your current quota for the Google AI API, as indicated by the error code 429. This means that your usage has surpassed the limits set by your plan.\n\nTo address this issue, you have two main options:\n\n1. **Check Quota and Billing**: It's advisable to review your current plan and billing details. You might need to upgrade your plan or adjust your usage limits to accommodate your needs.\n\n2. **Retry After Delay**: If adjusting your quota is not feasible at the moment, you can wait for the specified retry delay of 55 seconds before attempting the task again. \n\nFor additional guidance on the quota limits, you can consult the [Gemini API quotas documentation](https://ai.google.dev/gemini-api/docs/rate-limits). This resource will help you understand how to manage your usage effectively.",
      "translate_response": "Error executing task translate_response: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 46\n}\n]",
      "send_response": "It appears that you encountered a quota-related issue while trying to execute the task for generating a response using the Google AI API. The error code 429 indicates that your current usage has exceeded the limits set by your plan.\n\nTo address this, you can take the following steps:\n\n1. **Check Quota and Billing**: Review your current plan and billing details. You may need to upgrade your plan or adjust your usage limits to increase your API quota.\n\n2. **Retry After Delay**: You can also wait for the specified retry delay of 51 seconds before attempting to execute the task again.\n\nFor more information about the quota limits and how to manage them, you can refer to the [Gemini API quotas documentation](https://ai.google.dev/gemini-api/docs/rate-limits). If you need immediate assistance, checking your account settings and considering an upgrade may be the most effective solution.",
      "create_followup": "Error executing task create_followup: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 42\n}\n]",
      "log_analytics": "It seems you've encountered a quota-related issue with the Google AI API, indicated by the error code 429. This means that your current usage has exceeded the limits set by your plan. Here are the steps you can take to resolve this issue:\n\n1. **Check Quota and Billing**: Review your current plan and billing details. It may be necessary to upgrade your plan or adjust your usage limits to increase your API quota.\n\n2. **Retry After Delay**: You can wait for the specified retry delay of 51 seconds before attempting to execute the task again, as noted in the previous results.\n\nFor more detailed information on managing your quota limits, please refer to the [Gemini API quotas documentation](https://ai.google.dev/gemini-api/docs/rate-limits). If you require immediate assistance, consider reaching out to customer support."
    },
    "timestamp": "2025-07-17T08:55:42.796402"
  },
  "data_processing_workflow.yaml": {
    "status": "error",
    "error": "Failed to compile YAML: Failed to render template '<AUTO>discover all data sources matching pattern {{source}} and gather metadata including:\n      1. File/table names and sizes\n      2. Data formats and schemas\n      3. Creation/modification dates\n      4. Access permissions\n      Return list of valid sources with metadata</AUTO>': 'source' is undefined",
    "error_type": "YAMLCompilerError",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 149, in process_value\n    return template.render(**context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jinja2/environment.py\", line 1304, in render\n    self.environment.handle_exception()\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jinja2/environment.py\", line 939, in handle_exception\n    raise rewrite_traceback_stack(source=source)\n  File \"<template>\", line 1, in top-level template code\njinja2.exceptions.UndefinedError: 'source' is undefined\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 94, in compile\n    processed = self._process_templates(raw_pipeline, context or {})\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 179, in _process_templates\n    return process_value(pipeline_def)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 174, in process_value\n    return {k: process_value(v) for k, v in value.items()}\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 176, in process_value\n    return [process_value(item) for item in value]\n            ^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 174, in process_value\n    return {k: process_value(v) for k, v in value.items()}\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 170, in process_value\n    raise TemplateRenderError(\norchestrator.compiler.yaml_compiler.TemplateRenderError: Failed to render template '<AUTO>discover all data sources matching pattern {{source}} and gather metadata including:\n      1. File/table names and sizes\n      2. Data formats and schemas\n      3. Creation/modification dates\n      4. Access permissions\n      Return list of valid sources with metadata</AUTO>': 'source' is undefined\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/test_all_examples_comprehensive.py\", line 112, in test_all_examples\n    result = await self.orchestrator.execute_yaml(yaml_content, inputs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/orchestrator.py\", line 406, in execute_yaml\n    pipeline = await self.yaml_compiler.compile(yaml_content, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 106, in compile\n    raise YAMLCompilerError(f\"Failed to compile YAML: {e}\") from e\norchestrator.compiler.yaml_compiler.YAMLCompilerError: Failed to compile YAML: Failed to render template '<AUTO>discover all data sources matching pattern {{source}} and gather metadata including:\n      1. File/table names and sizes\n      2. Data formats and schemas\n      3. Creation/modification dates\n      4. Access permissions\n      Return list of valid sources with metadata</AUTO>': 'source' is undefined\n",
    "inputs": {
      "data_source": "sample_dataset.csv",
      "processing_steps": [
        "clean",
        "validate",
        "transform"
      ],
      "output_format": "json",
      "quality_threshold": 0.9
    },
    "timestamp": "2025-07-17T08:56:20.366855"
  },
  "document_intelligence.yaml": {
    "status": "error",
    "error": "Failed to compile YAML: Failed to render template '<AUTO>save all outputs to {{output_dir}}:\n      Save:\n      1. Intelligence report ({{output_format}})\n      2. Extracted text files\n      3. Entity lists (CSV)\n      4. Summaries (markdown)\n      5. Knowledge graph (JSON and visualization)\n      6. Compliance report (PDF)\n      7. Table data (Excel)\n      8. Processing log\n      \n      Organize in folder structure:\n      - /reports\n      - /extracted_text\n      - /entities\n      - /summaries\n      - /data\n      - /visualizations\n      \n      Return output locations</AUTO>': 'output_format' is undefined",
    "error_type": "YAMLCompilerError",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 149, in process_value\n    return template.render(**context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jinja2/environment.py\", line 1304, in render\n    self.environment.handle_exception()\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jinja2/environment.py\", line 939, in handle_exception\n    raise rewrite_traceback_stack(source=source)\n  File \"<template>\", line 3, in top-level template code\njinja2.exceptions.UndefinedError: 'output_format' is undefined\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 94, in compile\n    processed = self._process_templates(raw_pipeline, context or {})\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 179, in _process_templates\n    return process_value(pipeline_def)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 174, in process_value\n    return {k: process_value(v) for k, v in value.items()}\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 176, in process_value\n    return [process_value(item) for item in value]\n            ^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 174, in process_value\n    return {k: process_value(v) for k, v in value.items()}\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 170, in process_value\n    raise TemplateRenderError(\norchestrator.compiler.yaml_compiler.TemplateRenderError: Failed to render template '<AUTO>save all outputs to {{output_dir}}:\n      Save:\n      1. Intelligence report ({{output_format}})\n      2. Extracted text files\n      3. Entity lists (CSV)\n      4. Summaries (markdown)\n      5. Knowledge graph (JSON and visualization)\n      6. Compliance report (PDF)\n      7. Table data (Excel)\n      8. Processing log\n      \n      Organize in folder structure:\n      - /reports\n      - /extracted_text\n      - /entities\n      - /summaries\n      - /data\n      - /visualizations\n      \n      Return output locations</AUTO>': 'output_format' is undefined\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/test_all_examples_comprehensive.py\", line 112, in test_all_examples\n    result = await self.orchestrator.execute_yaml(yaml_content, inputs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/orchestrator.py\", line 406, in execute_yaml\n    pipeline = await self.yaml_compiler.compile(yaml_content, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 106, in compile\n    raise YAMLCompilerError(f\"Failed to compile YAML: {e}\") from e\norchestrator.compiler.yaml_compiler.YAMLCompilerError: Failed to compile YAML: Failed to render template '<AUTO>save all outputs to {{output_dir}}:\n      Save:\n      1. Intelligence report ({{output_format}})\n      2. Extracted text files\n      3. Entity lists (CSV)\n      4. Summaries (markdown)\n      5. Knowledge graph (JSON and visualization)\n      6. Compliance report (PDF)\n      7. Table data (Excel)\n      8. Processing log\n      \n      Organize in folder structure:\n      - /reports\n      - /extracted_text\n      - /entities\n      - /summaries\n      - /data\n      - /visualizations\n      \n      Return output locations</AUTO>': 'output_format' is undefined\n",
    "inputs": {
      "input_dir": "/tmp/sample_documents",
      "output_dir": "/tmp/processed_documents",
      "enable_ocr": true,
      "languages": [
        "en"
      ],
      "extract_tables": true,
      "build_knowledge_graph": true
    },
    "timestamp": "2025-07-17T08:56:20.389852"
  },
  "financial_analysis_bot.yaml": {
    "status": "error",
    "error": "Failed to compile YAML: Failed to render template '<AUTO>fetch market data for symbol {{item}}:\n      Timeframe: {{timeframe}}\n      \n      Collect:\n      1. Price data (OHLCV)\n      2. Volume statistics\n      3. Market cap and shares outstanding\n      4. Fundamental data (if equity)\n      5. Recent splits and dividends\n      6. Sector and industry info\n      \n      Use best available data source\n      Handle missing data appropriately\n      \n      Return complete market dataset</AUTO>': 'item' is undefined",
    "error_type": "YAMLCompilerError",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 149, in process_value\n    return template.render(**context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jinja2/environment.py\", line 1304, in render\n    self.environment.handle_exception()\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jinja2/environment.py\", line 939, in handle_exception\n    raise rewrite_traceback_stack(source=source)\n  File \"<template>\", line 1, in top-level template code\njinja2.exceptions.UndefinedError: 'item' is undefined\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 94, in compile\n    processed = self._process_templates(raw_pipeline, context or {})\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 179, in _process_templates\n    return process_value(pipeline_def)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 174, in process_value\n    return {k: process_value(v) for k, v in value.items()}\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 176, in process_value\n    return [process_value(item) for item in value]\n            ^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 174, in process_value\n    return {k: process_value(v) for k, v in value.items()}\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 170, in process_value\n    raise TemplateRenderError(\norchestrator.compiler.yaml_compiler.TemplateRenderError: Failed to render template '<AUTO>fetch market data for symbol {{item}}:\n      Timeframe: {{timeframe}}\n      \n      Collect:\n      1. Price data (OHLCV)\n      2. Volume statistics\n      3. Market cap and shares outstanding\n      4. Fundamental data (if equity)\n      5. Recent splits and dividends\n      6. Sector and industry info\n      \n      Use best available data source\n      Handle missing data appropriately\n      \n      Return complete market dataset</AUTO>': 'item' is undefined\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/test_all_examples_comprehensive.py\", line 112, in test_all_examples\n    result = await self.orchestrator.execute_yaml(yaml_content, inputs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/orchestrator.py\", line 406, in execute_yaml\n    pipeline = await self.yaml_compiler.compile(yaml_content, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 106, in compile\n    raise YAMLCompilerError(f\"Failed to compile YAML: {e}\") from e\norchestrator.compiler.yaml_compiler.YAMLCompilerError: Failed to compile YAML: Failed to render template '<AUTO>fetch market data for symbol {{item}}:\n      Timeframe: {{timeframe}}\n      \n      Collect:\n      1. Price data (OHLCV)\n      2. Volume statistics\n      3. Market cap and shares outstanding\n      4. Fundamental data (if equity)\n      5. Recent splits and dividends\n      6. Sector and industry info\n      \n      Use best available data source\n      Handle missing data appropriately\n      \n      Return complete market dataset</AUTO>': 'item' is undefined\n",
    "inputs": {
      "symbols": [
        "AAPL",
        "GOOGL",
        "MSFT"
      ],
      "timeframe": "1y",
      "analysis_type": "comprehensive",
      "risk_tolerance": "moderate",
      "include_predictions": true,
      "run_backtest": false
    },
    "timestamp": "2025-07-17T08:56:20.398317"
  },
  "interactive_chat_bot.yaml": {
    "status": "success",
    "execution_time": 48.618448,
    "inputs": {
      "message": "I need help planning a sustainable technology conference",
      "conversation_id": "conv_2024_001",
      "persona": "helpful-assistant",
      "enable_streaming": false,
      "available_tools": [
        "web_search",
        "knowledge_base"
      ]
    },
    "outputs": {},
    "step_results": {
      "process_input": "Error executing task process_input: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 26\n}\n]",
      "safety_check": "It seems that there was an error executing the task related to the Google AI API, specifically a 429 error indicating that you have exceeded your current quota. This is a common issue when the number of requests exceeds the allowed limits for your current plan. \n\nTo address this, you can check your plan and billing details to ensure you are within your quota. For more information on managing your API usage and understanding quotas, you can refer to the provided link: [Learn more about Gemini API quotas](https://ai.google.dev/gemini-api/docs/rate-limits).\n\nAdditionally, the error message specifies a retry delay of 26 seconds, meaning you may want to wait for that duration before attempting to make another request. If you frequently encounter this issue, consider reviewing your usage patterns or upgrading your plan to accommodate higher limits.",
      "retrieve_context": "Error executing task retrieve_context: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 22\n}\n]",
      "classify_intent": "It seems that there was an error when attempting to retrieve context for intent classification due to exceeding the quota for the Google AI API. The error message indicates that the quota has been exceeded, which prevents further requests until the rate limit resets or the quota is increased.\n\nTo address this issue, you may want to check your plan and billing details as suggested in the error message. This can help you understand your current usage and see if you need to upgrade your plan for higher limits. For more information about the quotas and rate limits, you can refer to the documentation provided in the error message: [Learn more about Gemini API quotas](https://ai.google.dev/gemini-api/docs/rate-limits).\n\nSince we couldn't retrieve additional context due to this error, please provide any specific details or examples you would like assistance with for intent classification, and I'll do my best to help you based on general knowledge and available information.",
      "select_tools": "Error executing task select_tools: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 17\n}\n]",
      "execute_tools": "It appears that there was an error executing the task related to selecting tools, specifically due to exceeding the current quota for the Google AI API. The error code is 429, which indicates that the request limit has been surpassed. To resolve this issue, you should review your plan and billing details associated with the API usage. \n\nFor further information on this error and how to manage your API quotas, you can refer to the documentation provided in the link: [Learn more about Gemini API quotas](https://ai.google.dev/gemini-api/docs/rate-limits). Additionally, it is advisable to wait for the retry delay of 17 seconds before attempting the request again.\n\nIf you have any specific tasks or questions that require assistance, please let me know!",
      "generate_response": "Error executing task generate_response: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 14\n}\n]",
      "enhance_response": "It seems that there was an issue with executing the `generate_response` task due to exceeding the current quota for the Google AI API. The error message indicates a 429 status code, which typically means that too many requests have been made in a given time frame.\n\nTo resolve this issue, you can:\n\n1. Check your plan and billing details to ensure that your usage is within the allowed limits.\n2. Refer to the [Gemini API quotas documentation](https://ai.google.dev/gemini-api/docs/rate-limits) for more information on the specific limits associated with your account.\n3. Consider waiting for a period of time (the retry delay is noted to be 14 seconds) before attempting the request again.\n\nIf you continue to face issues, reaching out to Google support for assistance may be necessary.",
      "extract_facts": "Error executing task extract_facts: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 10\n}\n]",
      "suggest_followups": "If you're encountering the 429 status code error while using the Google AI API, here are some specific steps you can take to resolve the issue effectively:\n\n1. **Review Your Quota**: Log in to your Google Cloud account and check your usage against the limits of your current plan. Ensure that you have not exceeded the allowed number of requests for your tier.\n\n2. **Consult the Documentation**: Familiarize yourself with the [Gemini API quotas documentation](https://ai.google.dev/gemini-api/docs/rate-limits). This resource will provide detailed information on the limits applicable to your account, helping you understand how to optimize your API usage.\n\n3. **Implement Retry Logic**: Since the retry delay is noted to be 14 seconds, consider implementing a backoff strategy in your code. This means waiting for 14 seconds after receiving the 429 status code before attempting another request. You may also want to gradually increase the wait time for subsequent retries to avoid hitting the limit again.\n\n4. **Monitor Your API Usage**: Set up monitoring or alerts for your API usage to keep track of how close you are to your limits. This can help prevent unexpected downtime in the future.\n\n5. **Contact Support**: If you've taken these steps and still experience issues, reach out to Google support for further assistance. They can provide insights specific to your account and help troubleshoot any underlying problems.\n\nBy following these suggestions, you should be able to manage your API usage more effectively and minimize the risk of encountering rate limit errors.",
      "prepare_streaming": "Error executing task prepare_streaming: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 3\n}\n]",
      "log_analytics": "It looks like you encountered a 429 status code error while trying to execute the `generate_response` task, which indicates that you have exceeded the request quota for the Google AI API. Here are some steps you can take to address this issue:\n\n1. **Check Your Account Limits**: Review your plan and billing details to ensure that your request usage is within the allowed limits. This can help you identify if you need to upgrade your plan for higher limits.\n\n2. **Consult the Documentation**: For detailed information about the specific limits associated with your account, refer to the [Gemini API quotas documentation](https://ai.google.dev/gemini-api/docs/rate-limits). This can provide insights into how many requests you can make and any other relevant restrictions.\n\n3. **Wait and Retry**: If you have reached your limit, it might be necessary to wait for a period of time before making new requests. The retry delay mentioned is 14 seconds, so you can attempt to make your request again after this period.\n\n4. **Contact Support**: If you continue to experience issues despite following the above steps, consider reaching out to Google support for further assistance. They can provide more specific guidance based on your account status and usage.\n\nBy taking these steps, you should be able to resolve the quota issue and proceed with your tasks.",
      "update_memory": "Error executing task update_memory: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 57\n}\n]",
      "prepare_output": "It seems that you're encountering a 429 status code error while trying to use the Google AI API, which indicates that you have exceeded your current quota. Here are some actionable steps to help you resolve the issue:\n\n1. **Review Your Quota**: Log in to your Google Cloud account and check your usage against the limits of your current plan. This will help you identify if you need to adjust your usage or possibly upgrade your plan for higher limits.\n\n2. **Consult the Documentation**: Familiarize yourself with the [Gemini API quotas documentation](https://ai.google.dev/gemini-api/docs/rate-limits). This resource provides detailed information on the limits applicable to your account, which can help you optimize your API usage.\n\n3. **Implement Retry Logic**: Given that the retry delay is noted to be 3 seconds, consider implementing a backoff strategy in your code. This means that upon receiving a 429 error, you should wait for 3 seconds before retrying your request. It's important to handle this gracefully to prevent overwhelming the service.\n\n4. **Monitor Your Requests**: Keep an eye on your API request patterns. If you're consistently hitting the limits, you might need to adjust your application to reduce the number of requests or consider batching your requests if possible.\n\n5. **Upgrade Your Plan**: If your usage regularly exceeds the current limits, consider upgrading your plan to accommodate your needs better.\n\nBy following these steps, you should be able to manage the rate limits effectively and reduce the occurrence of this error. If the problem persists after these adjustments, you may want to reach out to Google Cloud support for further assistance."
    },
    "timestamp": "2025-07-17T08:56:20.398990"
  },
  "model_requirements_pipeline.yaml": {
    "status": "error",
    "error": "Failed to compile YAML: Schema validation failed: 0 is not of type 'string'",
    "error_type": "YAMLCompilerError",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/schema_validator.py\", line 45, in validate\n    self.validator.validate(pipeline_def)\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jsonschema/validators.py\", line 451, in validate\n    raise error\njsonschema.exceptions.ValidationError: 0 is not of type 'string'\n\nFailed validating 'type' in schema['properties']['steps']['items']['properties']['requires_model']['properties']['min_size']:\n    {'type': 'string'}\n\nOn instance['steps'][0]['requires_model']['min_size']:\n    0\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 91, in compile\n    self.schema_validator.validate(raw_pipeline)\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/schema_validator.py\", line 47, in validate\n    raise SchemaValidationError(f\"Schema validation failed: {e.message}\") from e\norchestrator.compiler.schema_validator.SchemaValidationError: Schema validation failed: 0 is not of type 'string'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/test_all_examples_comprehensive.py\", line 112, in test_all_examples\n    result = await self.orchestrator.execute_yaml(yaml_content, inputs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/orchestrator.py\", line 406, in execute_yaml\n    pipeline = await self.yaml_compiler.compile(yaml_content, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 106, in compile\n    raise YAMLCompilerError(f\"Failed to compile YAML: {e}\") from e\norchestrator.compiler.yaml_compiler.YAMLCompilerError: Failed to compile YAML: Schema validation failed: 0 is not of type 'string'\n",
    "inputs": {},
    "timestamp": "2025-07-17T08:57:09.022852"
  },
  "multi_agent_collaboration.yaml": {
    "status": "error",
    "error": "Failed to compile YAML: Failed to render template '<AUTO>create a network of {{num_agents}} specialized AI agents with roles:\n      1. Researcher agents - gather information and conduct analysis\n      2. Analyst agents - process data and identify patterns\n      3. Creative agents - generate innovative solutions\n      4. Critic agents - evaluate and identify issues\n      5. Synthesizer agent - integrate and coordinate\n      \n      Use {{agent_roles}} role distribution strategy.\n      Create communication channels between agents.\n      Return agent profiles and network topology</AUTO>': 'num_agents' is undefined",
    "error_type": "YAMLCompilerError",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 149, in process_value\n    return template.render(**context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jinja2/environment.py\", line 1304, in render\n    self.environment.handle_exception()\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jinja2/environment.py\", line 939, in handle_exception\n    raise rewrite_traceback_stack(source=source)\n  File \"<template>\", line 1, in top-level template code\njinja2.exceptions.UndefinedError: 'num_agents' is undefined\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 94, in compile\n    processed = self._process_templates(raw_pipeline, context or {})\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 179, in _process_templates\n    return process_value(pipeline_def)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 174, in process_value\n    return {k: process_value(v) for k, v in value.items()}\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 176, in process_value\n    return [process_value(item) for item in value]\n            ^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 174, in process_value\n    return {k: process_value(v) for k, v in value.items()}\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 170, in process_value\n    raise TemplateRenderError(\norchestrator.compiler.yaml_compiler.TemplateRenderError: Failed to render template '<AUTO>create a network of {{num_agents}} specialized AI agents with roles:\n      1. Researcher agents - gather information and conduct analysis\n      2. Analyst agents - process data and identify patterns\n      3. Creative agents - generate innovative solutions\n      4. Critic agents - evaluate and identify issues\n      5. Synthesizer agent - integrate and coordinate\n      \n      Use {{agent_roles}} role distribution strategy.\n      Create communication channels between agents.\n      Return agent profiles and network topology</AUTO>': 'num_agents' is undefined\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/test_all_examples_comprehensive.py\", line 112, in test_all_examples\n    result = await self.orchestrator.execute_yaml(yaml_content, inputs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/orchestrator.py\", line 406, in execute_yaml\n    pipeline = await self.yaml_compiler.compile(yaml_content, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 106, in compile\n    raise YAMLCompilerError(f\"Failed to compile YAML: {e}\") from e\norchestrator.compiler.yaml_compiler.YAMLCompilerError: Failed to compile YAML: Failed to render template '<AUTO>create a network of {{num_agents}} specialized AI agents with roles:\n      1. Researcher agents - gather information and conduct analysis\n      2. Analyst agents - process data and identify patterns\n      3. Creative agents - generate innovative solutions\n      4. Critic agents - evaluate and identify issues\n      5. Synthesizer agent - integrate and coordinate\n      \n      Use {{agent_roles}} role distribution strategy.\n      Create communication channels between agents.\n      Return agent profiles and network topology</AUTO>': 'num_agents' is undefined\n",
    "inputs": {
      "project_description": "Build a web application for task management",
      "agents": [
        "researcher",
        "designer",
        "developer"
      ],
      "deadline": "2024-12-31",
      "budget": 50000
    },
    "timestamp": "2025-07-17T08:57:09.030583"
  },
  "multi_model_pipeline.yaml": {
    "status": "error",
    "error": "Failed to compile YAML: Schema validation failed: '1.0' does not match '^\\\\d+\\\\.\\\\d+\\\\.\\\\d+$'",
    "error_type": "YAMLCompilerError",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/schema_validator.py\", line 45, in validate\n    self.validator.validate(pipeline_def)\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jsonschema/validators.py\", line 451, in validate\n    raise error\njsonschema.exceptions.ValidationError: '1.0' does not match '^\\\\d+\\\\.\\\\d+\\\\.\\\\d+$'\n\nFailed validating 'pattern' in schema['properties']['version']:\n    {'type': 'string', 'pattern': '^\\\\d+\\\\.\\\\d+\\\\.\\\\d+$'}\n\nOn instance['version']:\n    '1.0'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 91, in compile\n    self.schema_validator.validate(raw_pipeline)\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/schema_validator.py\", line 47, in validate\n    raise SchemaValidationError(f\"Schema validation failed: {e.message}\") from e\norchestrator.compiler.schema_validator.SchemaValidationError: Schema validation failed: '1.0' does not match '^\\\\d+\\\\.\\\\d+\\\\.\\\\d+$'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/test_all_examples_comprehensive.py\", line 112, in test_all_examples\n    result = await self.orchestrator.execute_yaml(yaml_content, inputs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/orchestrator.py\", line 406, in execute_yaml\n    pipeline = await self.yaml_compiler.compile(yaml_content, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 106, in compile\n    raise YAMLCompilerError(f\"Failed to compile YAML: {e}\") from e\norchestrator.compiler.yaml_compiler.YAMLCompilerError: Failed to compile YAML: Schema validation failed: '1.0' does not match '^\\\\d+\\\\.\\\\d+\\\\.\\\\d+$'\n",
    "inputs": {},
    "timestamp": "2025-07-17T08:57:09.035243"
  },
  "research_assistant.yaml": {
    "status": "success",
    "execution_time": 19.481103,
    "inputs": {
      "query": "latest developments in artificial intelligence 2024",
      "context": "Focus on breakthrough technologies and practical applications",
      "max_sources": 10,
      "quality_threshold": 0.8
    },
    "outputs": {},
    "step_results": {
      "analyze_query": "Error executing task analyze_query: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 46\n}\n]",
      "web_search": "The analysis of the query failed due to a Google AI API error (code 429), indicating that the current usage quota has been exceeded. To resolve this issue, it's recommended to check the plan and billing details. For further information on quotas and limitations, refer to the documentation at the provided link. A retry delay of 46 seconds is suggested before attempting the task again.",
      "extract_content": "Error executing task extract_content: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 44\n}\n]",
      "analyze_credibility": "It appears that the previous attempt to extract content resulted in an error due to exceeding the quota for the Google AI API. The error message indicates a status code of 429, which typically signifies that too many requests have been made in a given timeframe. \n\nTo proceed, you may want to check your plan and billing details to ensure you have adequate quota remaining. Additionally, the error message suggests waiting for the specified retry delay of 44 seconds before attempting to make another request to the API.\n\nFor further information on managing your API usage and understanding rate limits, you can refer to the documentation linked in the error message: [Learn more about Gemini API quotas](https://ai.google.dev/gemini-api/docs/rate-limits).\n\nIf you have further queries or need assistance with a different task, feel free to ask!",
      "filter_sources": "Error executing task filter_sources: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 40\n}\n]",
      "synthesize_findings": "It seems that there was an error while trying to execute the filter_sources task due to exceeding the current quota for the Google AI API, returning a status code of 429. This indicates that the limit set for API requests has been surpassed. \n\nTo resolve this issue, you can check your plan and billing details to ensure that you have sufficient quota for your needs. For further guidance, you can refer to the documentation on [Gemini API quotas](https://ai.google.dev/gemini-api/docs/rate-limits). \n\nAdditionally, the error message suggests a retry delay of 40 seconds before attempting the request again. If you have further questions or need assistance with specific tasks, please let me know!",
      "generate_report": "Error executing task generate_report: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 36\n}\n]",
      "export_pdf": "It appears that there was an error while attempting to generate the report for your query due to exceeding the quota for the Google AI API. The error message indicates that you should check your plan and billing details to address this issue. \n\nFor more information on the limitations and quotas of the Gemini API, you can refer to the documentation provided in the error message: [Learn more about Gemini API quotas](https://ai.google.dev/gemini-api/docs/rate-limits).\n\nSince the report generation failed, I recommend waiting for the retry delay of 36 seconds before attempting again. If you continue to encounter issues, consider reviewing your current API usage and exploring options to adjust your quota or upgrade your plan if necessary.\n\nIf you have specific questions or need assistance with a different aspect of your research report, please let me know!",
      "quality_check": "Error executing task quality_check: Google AI API error: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 31\n}\n]"
    },
    "timestamp": "2025-07-17T08:57:09.035813"
  },
  "scalable_customer_service_agent.yaml": {
    "status": "error",
    "error": "Failed to compile YAML: Failed to render template '<AUTO>receive customer interaction from {{channel}}:\n      Interaction ID: {{interaction_id}}\n      Customer ID: {{customer_id}}\n      Content: {{content}}\n      Metadata: {{metadata}}\n      \n      Standardize format across channels and extract:\n      1. Timestamp\n      2. Channel context\n      3. Session information\n      4. Attachments if any\n      5. Priority indicators\n      \n      Return standardized interaction data</AUTO>': 'metadata' is undefined",
    "error_type": "YAMLCompilerError",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 149, in process_value\n    return template.render(**context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jinja2/environment.py\", line 1304, in render\n    self.environment.handle_exception()\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jinja2/environment.py\", line 939, in handle_exception\n    raise rewrite_traceback_stack(source=source)\n  File \"<template>\", line 5, in top-level template code\njinja2.exceptions.UndefinedError: 'metadata' is undefined\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 94, in compile\n    processed = self._process_templates(raw_pipeline, context or {})\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 179, in _process_templates\n    return process_value(pipeline_def)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 174, in process_value\n    return {k: process_value(v) for k, v in value.items()}\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 176, in process_value\n    return [process_value(item) for item in value]\n            ^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 174, in process_value\n    return {k: process_value(v) for k, v in value.items()}\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 170, in process_value\n    raise TemplateRenderError(\norchestrator.compiler.yaml_compiler.TemplateRenderError: Failed to render template '<AUTO>receive customer interaction from {{channel}}:\n      Interaction ID: {{interaction_id}}\n      Customer ID: {{customer_id}}\n      Content: {{content}}\n      Metadata: {{metadata}}\n      \n      Standardize format across channels and extract:\n      1. Timestamp\n      2. Channel context\n      3. Session information\n      4. Attachments if any\n      5. Priority indicators\n      \n      Return standardized interaction data</AUTO>': 'metadata' is undefined\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/test_all_examples_comprehensive.py\", line 112, in test_all_examples\n    result = await self.orchestrator.execute_yaml(yaml_content, inputs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/orchestrator.py\", line 406, in execute_yaml\n    pipeline = await self.yaml_compiler.compile(yaml_content, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 106, in compile\n    raise YAMLCompilerError(f\"Failed to compile YAML: {e}\") from e\norchestrator.compiler.yaml_compiler.YAMLCompilerError: Failed to compile YAML: Failed to render template '<AUTO>receive customer interaction from {{channel}}:\n      Interaction ID: {{interaction_id}}\n      Customer ID: {{customer_id}}\n      Content: {{content}}\n      Metadata: {{metadata}}\n      \n      Standardize format across channels and extract:\n      1. Timestamp\n      2. Channel context\n      3. Session information\n      4. Attachments if any\n      5. Priority indicators\n      \n      Return standardized interaction data</AUTO>': 'metadata' is undefined\n",
    "inputs": {
      "interaction_id": "INT-2024-001",
      "customer_id": "CUST-12345",
      "channel": "chat",
      "content": "I'm having trouble with my recent order and need a refund",
      "languages": [
        "en"
      ],
      "sla_targets": {
        "first_response": 60,
        "resolution": 3600
      }
    },
    "timestamp": "2025-07-17T08:57:28.527746"
  },
  "simple_pipeline.yaml": {
    "status": "error",
    "error": "Failed to compile YAML: Schema validation failed: '1.0' does not match '^\\\\d+\\\\.\\\\d+\\\\.\\\\d+$'",
    "error_type": "YAMLCompilerError",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/schema_validator.py\", line 45, in validate\n    self.validator.validate(pipeline_def)\n  File \"/Users/jmanning/miniconda3/lib/python3.12/site-packages/jsonschema/validators.py\", line 451, in validate\n    raise error\njsonschema.exceptions.ValidationError: '1.0' does not match '^\\\\d+\\\\.\\\\d+\\\\.\\\\d+$'\n\nFailed validating 'pattern' in schema['properties']['version']:\n    {'type': 'string', 'pattern': '^\\\\d+\\\\.\\\\d+\\\\.\\\\d+$'}\n\nOn instance['version']:\n    '1.0'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 91, in compile\n    self.schema_validator.validate(raw_pipeline)\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/schema_validator.py\", line 47, in validate\n    raise SchemaValidationError(f\"Schema validation failed: {e.message}\") from e\norchestrator.compiler.schema_validator.SchemaValidationError: Schema validation failed: '1.0' does not match '^\\\\d+\\\\.\\\\d+\\\\.\\\\d+$'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/jmanning/orchestrator/test_all_examples_comprehensive.py\", line 112, in test_all_examples\n    result = await self.orchestrator.execute_yaml(yaml_content, inputs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/orchestrator.py\", line 406, in execute_yaml\n    pipeline = await self.yaml_compiler.compile(yaml_content, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/jmanning/orchestrator/src/orchestrator/compiler/yaml_compiler.py\", line 106, in compile\n    raise YAMLCompilerError(f\"Failed to compile YAML: {e}\") from e\norchestrator.compiler.yaml_compiler.YAMLCompilerError: Failed to compile YAML: Schema validation failed: '1.0' does not match '^\\\\d+\\\\.\\\\d+\\\\.\\\\d+$'\n",
    "inputs": {},
    "timestamp": "2025-07-17T08:57:28.531281"
  }
}